{"version":3,"sources":["store/start/actions.js","plugins/LocalStorage.js","store/start/reducer.js","store/test/actions.js","store/test/reducer.js","store/reducer.js","store/index.js","assets/svg/HomeChecked.svg","components/Footer/index.js","views/Home/index.js","views/Start/components/QuestionType/index.js","views/Start/components/QuestionSettings/index.js","views/Start/components/QuestionCtrl/index.js","views/Start/index.js","plugins/ExpGen.js","plugins/genQuestions.js","views/Test/components/TestSection/index.js","views/Test/components/TestCtrl/index.js","views/Test/index.js","views/HistoryIndex/index.js","plugins/CustomFile.js","views/History/components/HistoryCtrl/index.js","views/History/components/HistorySection/index.js","views/History/index.js","views/About/index.js","App.js","index.js"],"names":["UPDATE_QUESTION_TYPES","UPDATE_QUESTION_SETTINGSS","actionQuestionSettings","value","type","CLEAN_SETTINGS_CACHE","SETTINGS","HISTORY","LocalStorage","obj","json","JSON","stringify","localStorage","setItem","e","console","error","parse","getItem","ls","EASY_SETTINGS","fromJS","hhc","range","minus","bracket","dot","dotRange","HARD_SETTINGS","defaultState","questionTypes","fillBlank","judge","select","questionSettings","reducer","prevState","action","newState","mergeDeep","toJS","save","settings","load","UPDATE_ALL_QUESTIONS","actionAllQuestions","UPDATE_FILL_BLANK_QUESTIONS","UPDATE_JUDGE_QUESTIONS","UPDATE_SELECT_QUESTIONS","SAVE_ALL_QUESTIONS","REMOVE_HISTORY","actionRemoveHistory","LOAD_HISTORY","CLEAN_HISTORY_CACHE","fillBlankQuestions","judgeQuestions","selectQuestions","history","set","index","answer","oldList","get","newList","maxID","length","forEach","val","newHistory","historyID","historyQuestions","date","dayjs","toJSON","correctRate","allQuestions","correctQuestions","Object","keys","key","question","status","ans","userAns","toFixed","push","i","splice","lsHistory","combineReducers","start","test","enhancer","window","__REDUX_DEVTOOLS_EXTENSION__","store","createStore","Footer","props","className","divider","CopyrightOutlined","AntDesignOutlined","Home","src","HomeChecked","alt","size","to","component","QuestionType","dispatch","useDispatch","typeText","typeKey","number","useSelector","state","getIn","updateQuestionTypes","isNaN","actionQuestionTypes","min","max","onChange","QuestionSettings","isCustom","updateSwitch","checked","Group","target","split","buttonStyle","Button","disabled","checkedChildren","unCheckedChildren","Option","QuestionCtrl","placement","title","onConfirm","success","icon","RestOutlined","GithubOutlined","href","Start","gutter","xs","md","defaultSettings","ExpGen","this","_updateSettings","rand","Math","random","round","elementArray","elementNumber","_getRandomNumber","map","dotNum","concat","calsArray","expression","shift","join","exp","startIndex","endIndex","startRand","endRand","elements","includes","Promise","resolve","reject","s","exps","_genExpression","_insertBracket","evaluate","checker","Number","isFinite","abs","toString","genQuestions","rawExps","fillBlankExps","_genFillBlank","judgeExps","newVal","_genJudge","selectExps","selections","_genSelect","TestSection","questions","questionType","columnTitle","columnRender","record","actionFillBlankQuestions","optionType","options","label","CheckOutlined","CloseOutlined","actionJudgeQuestions","actionSelectQuestions","dataSource","rowKey","pagination","tableLayout","Column","dataIndex","align","width","render","TestCtrl","ID","useHistory","setLoading","qHistory","RedoOutlined","danger","LoginOutlined","expGen","Test","questionsAreEmpty","useState","loading","useEffect","a","getExpressions","setTimeout","spinning","cf","blob","Blob","link","document","createElement","URL","createObjectURL","download","replace","style","display","body","appendChild","click","removeChild","input","accept","addEventListener","files","file","reader","FileReader","onload","res","result","readAsText","Error","HistoryIndex","match","useRouteMatch","format","path","FileDoneOutlined","DeleteOutlined","CloudUploadOutlined","onClick","CloudDownloadOutlined","HistoryCtrl","h","ShareAltOutlined","renderAnswer","undefined","HistorySection","ansRender","userAnsRender","CheckCircleTwoTone","twoToneColor","CloseCircleTwoTone","History","useParams","About","App","withRouter","menuItems","SettingOutlined","text","FormOutlined","HistoryOutlined","InfoCircleOutlined","mode","selectedKeys","location","pathname","Item","ReactDOM","autoInsertSpaceInButton","locale","zh_CN","exact","getElementById"],"mappings":"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","file":"static/js/main.982f4323.chunk.js","sourcesContent":["// update question types\nexport const UPDATE_QUESTION_TYPES = 'UPDATE_QUESTION_TYPES';\nexport const actionQuestionTypes = (value) => ({\n  type: UPDATE_QUESTION_TYPES,\n  value,\n});\n\n// update question settings\nexport const UPDATE_QUESTION_SETTINGSS = 'UPDATE_QUESTION_SETTINGSS';\nexport const actionQuestionSettings = (value) => ({\n  type: UPDATE_QUESTION_SETTINGSS,\n  value,\n});\n\n// clean cache\nexport const CLEAN_SETTINGS_CACHE = 'CLEAN_SETTINGS_CACHE';\nexport const actionCleanSettingsCache = () => ({\n  type: CLEAN_SETTINGS_CACHE,\n});\n","const SETTINGS = 'pouni-calculation-tester-settings';\nconst HISTORY = 'pouni-calculation-tester-history';\n\n/**\n * local storage class\n */\nclass LocalStorage {\n  /**\n   * save data\n   * @param {string} type `settings` or `history`\n   * @param {object} obj\n   * @returns `true` or `false`\n   */\n  save(type, obj) {\n    let json;\n    try {\n      json = JSON.stringify(obj);\n      type === 'settings' && localStorage.setItem(SETTINGS, json);\n      type === 'history' && localStorage.setItem(HISTORY, json);\n      return true;\n    } catch (e) {\n      console.error(e);\n      return false;\n    }\n  }\n\n  /**\n   * load data\n   * @param {string} type `settings` or `history`\n   * @returns `obj` or `null`\n   */\n  load(type) {\n    let obj;\n    try {\n      type === 'settings' && (obj = JSON.parse(localStorage.getItem(SETTINGS)));\n      type === 'history' && (obj = JSON.parse(localStorage.getItem(HISTORY)));\n    } catch (e) {\n      console.error(e);\n      return null;\n    }\n    return obj;\n  }\n}\n\nexport default LocalStorage;\n","import { fromJS } from 'immutable';\nimport { UPDATE_QUESTION_TYPES, UPDATE_QUESTION_SETTINGSS, CLEAN_SETTINGS_CACHE } from './actions';\n// ls\nimport LocalStorage from '../../plugins/LocalStorage';\nconst ls = new LocalStorage();\n\n// intergated settings\nconst EASY_SETTINGS = fromJS({\n  hhc: 'easy',\n  range: 10,\n  minus: false,\n  bracket: false,\n  dot: false,\n  dotRange: 1,\n});\nconst HARD_SETTINGS = fromJS({\n  hhc: 'hard',\n  range: 100,\n  minus: true,\n  bracket: true,\n  dot: true,\n  dotRange: 2,\n});\n\nconst defaultState = fromJS({\n  questionTypes: {\n    fillBlank: 2, // fill in blanks\n    judge: 4, // judgements\n    select: 3, // selections\n  },\n  questionSettings: EASY_SETTINGS,\n});\n\nconst reducer = (prevState = defaultState, action) => {\n  switch (action.type) {\n    // update question types\n    case UPDATE_QUESTION_TYPES: {\n      const newState = prevState.mergeDeep(fromJS({ questionTypes: action.value }));\n      // prevent all 0\n      const { fillBlank, judge, select } = newState.toJS()['questionTypes'];\n      if (fillBlank === 0 && judge === 0 && select === 0) {\n        return prevState;\n      }\n      ls.save('settings', newState.toJS());\n      return newState;\n    }\n    // update question settings\n    case UPDATE_QUESTION_SETTINGSS: {\n      let newState;\n      if (action.value.hhc === 'easy') {\n        newState = prevState.mergeDeep(fromJS({ questionSettings: EASY_SETTINGS }));\n      } else if (action.value.hhc === 'hard') {\n        newState = prevState.mergeDeep(fromJS({ questionSettings: HARD_SETTINGS }));\n      } else {\n        newState = prevState.mergeDeep(fromJS({ questionSettings: action.value }));\n      }\n      ls.save('settings', newState.toJS());\n      return newState;\n    }\n    // clean cache\n    case CLEAN_SETTINGS_CACHE: {\n      ls.save('settings', null);\n      return defaultState;\n    }\n    // first init\n    default: {\n      const settings = ls.load('settings');\n      if (settings) {\n        // load from storage\n        return prevState.mergeDeep(fromJS(settings));\n      } else {\n        // init data\n        return prevState;\n      }\n    }\n  }\n};\n\nexport default reducer;\n","// update all questions\nexport const UPDATE_ALL_QUESTIONS = 'UPDATE_ALL_QUESTIONS';\nexport const actionAllQuestions = (value) => {\n  return {\n    type: UPDATE_ALL_QUESTIONS,\n    value,\n  };\n};\n\n// update fill blank questions\nexport const UPDATE_FILL_BLANK_QUESTIONS = 'UPDATE_FILL_BLANK_QUESTIONS';\nexport const actionFillBlankQuestions = (value) => {\n  return {\n    type: UPDATE_FILL_BLANK_QUESTIONS,\n    value,\n  };\n};\n\n// update judge questions\nexport const UPDATE_JUDGE_QUESTIONS = 'UPDATE_JUDGE_QUESTIONS';\nexport const actionJudgeQuestions = (value) => {\n  return {\n    type: UPDATE_JUDGE_QUESTIONS,\n    value,\n  };\n};\n\n// update select questions\nexport const UPDATE_SELECT_QUESTIONS = 'UPDATE_SELECT_QUESTIONS';\nexport const actionSelectQuestions = (value) => {\n  return {\n    type: UPDATE_SELECT_QUESTIONS,\n    value,\n  };\n};\n\n// save and check questions\nexport const SAVE_ALL_QUESTIONS = 'SAVE_ALL_QUESTIONS';\nexport const actionSaveAllQuestion = () => {\n  return {\n    type: SAVE_ALL_QUESTIONS,\n  };\n};\n\n// remove a history\nexport const REMOVE_HISTORY = 'REMOVE_HISTORY';\nexport const actionRemoveHistory = (value) => {\n  return {\n    type: REMOVE_HISTORY,\n    value,\n  };\n};\n\n// load history (from file)\nexport const LOAD_HISTORY = 'LOAD_HISTORY';\nexport const actionLoadHistory = (value) => {\n  return {\n    type: LOAD_HISTORY,\n    value,\n  };\n};\n\n// clean cache\nexport const CLEAN_HISTORY_CACHE = 'CLEAN_HISTORY_CACHE';\nexport const actionCleanHistoryCache = () => ({\n  type: CLEAN_HISTORY_CACHE,\n});\n","import { fromJS } from 'immutable';\nimport {\n  SAVE_ALL_QUESTIONS,\n  UPDATE_ALL_QUESTIONS,\n  UPDATE_FILL_BLANK_QUESTIONS,\n  UPDATE_JUDGE_QUESTIONS,\n  UPDATE_SELECT_QUESTIONS,\n  REMOVE_HISTORY,\n  LOAD_HISTORY,\n  CLEAN_HISTORY_CACHE,\n} from './actions';\n// dayjs\nimport * as dayjs from 'dayjs';\n// ls\nimport LocalStorage from '../../plugins/LocalStorage';\nconst ls = new LocalStorage();\n\nconst defaultState = fromJS({\n  fillBlankQuestions: [],\n  judgeQuestions: [],\n  selectQuestions: [],\n  history: [],\n});\n\nconst reducer = (prevState = defaultState, action) => {\n  switch (action.type) {\n    // update all questions\n    case UPDATE_ALL_QUESTIONS: {\n      if (action.value) {\n        return prevState\n          .set('fillBlankQuestions', fromJS(action.value.fillBlankQuestions))\n          .set('judgeQuestions', fromJS(action.value.judgeQuestions))\n          .set('selectQuestions', fromJS(action.value.selectQuestions));\n      } else {\n        // reset but not history\n        return prevState\n          .set('fillBlankQuestions', fromJS([]))\n          .set('judgeQuestions', fromJS([]))\n          .set('selectQuestions', fromJS([]));\n      }\n    }\n    // update fill blank questions { index, answer }\n    case UPDATE_FILL_BLANK_QUESTIONS: {\n      const { index, answer } = action.value;\n      const oldList = prevState.get('fillBlankQuestions');\n      const newList = oldList.set(index, oldList.get(index).set('userAns', answer));\n      return prevState.set('fillBlankQuestions', newList);\n    }\n    // update judge questions { index, answer }\n    case UPDATE_JUDGE_QUESTIONS: {\n      const { index, answer } = action.value;\n      const oldList = prevState.get('judgeQuestions');\n      const newList = oldList.set(index, oldList.get(index).set('userAns', answer));\n      return prevState.set('judgeQuestions', newList);\n    }\n    // update select questions { index, answer }\n    case UPDATE_SELECT_QUESTIONS: {\n      const { index, answer } = action.value;\n      const oldList = prevState.get('selectQuestions');\n      const newList = oldList.set(index, oldList.get(index).set('userAns', answer));\n      return prevState.set('selectQuestions', newList);\n    }\n    case SAVE_ALL_QUESTIONS: {\n      const oldList = prevState.get('history');\n      // gen new history, generate a id\n      let maxID = 0;\n      if (oldList.toJS().length > 0) {\n        oldList.forEach((val) => {\n          val.get('historyID') > maxID && (maxID = val.get('historyID'));\n        });\n      } else {\n        maxID = -1;\n      }\n      const newHistory = {\n        historyID: maxID + 1,\n        historyQuestions: {\n          fillBlankQuestions: prevState.get('fillBlankQuestions').toJS(),\n          judgeQuestions: prevState.get('judgeQuestions').toJS(),\n          selectQuestions: prevState.get('selectQuestions').toJS(),\n        },\n        date: dayjs().toJSON(),\n        correctRate: '',\n      };\n      // check answers\n      let allQuestions = 0;\n      let correctQuestions = 0;\n      Object.keys(newHistory.historyQuestions).forEach((key) => {\n        newHistory.historyQuestions[key].forEach((question) => {\n          allQuestions++;\n          question.status = question.ans === question.userAns;\n          question.status && correctQuestions++;\n        });\n      });\n      newHistory.correctRate = ((correctQuestions / allQuestions) * 100).toFixed(0) + '%';\n      // add a history\n      const newList = oldList.push(fromJS(newHistory));\n      ls.save('history', newList.toJS());\n      return prevState.set('history', newList);\n    }\n    // remove a history p: historyID\n    case REMOVE_HISTORY: {\n      const oldList = prevState.get('history').toJS();\n      // find history id's index\n      let index = -1;\n      oldList.forEach((val, i) => {\n        if (action.value === val.historyID) {\n          index = i;\n        }\n      });\n      if (index >= 0) {\n        oldList.splice(index, 1);\n        const newList = fromJS(oldList);\n        ls.save('history', newList.toJS());\n        return prevState.set('history', newList);\n      } else {\n        return prevState;\n      }\n    }\n    case LOAD_HISTORY: {\n      const newList = fromJS(action.value);\n      ls.save('history', newList.toJS());\n      return prevState.set('history', newList);\n    }\n    case CLEAN_HISTORY_CACHE: {\n      ls.save('history', null);\n      return defaultState;\n    }\n    // first init\n    default: {\n      const newState = prevState;\n      const lsHistory = ls.load('history');\n      if (lsHistory) {\n        // load from storage\n        return newState.set('history', fromJS(lsHistory));\n      } else {\n        // init data\n        return newState;\n      }\n    }\n  }\n};\n\nexport default reducer;\n","import { combineReducers } from 'redux-immutable';\n// reducers\nimport { reducer as start } from './start';\nimport { reducer as test } from './test';\n\n// combine reducers\nexport default combineReducers({\n  start,\n  test,\n});\n","import { createStore } from 'redux';\n// preloaded state\nimport reducer from './reducer';\n// apply devtools\nconst enhancer = window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__();\n// create store\nconst store = createStore(reducer, enhancer);\n\nexport default store;\n","export default __webpack_public_path__ + \"static/media/HomeChecked.65863f2e.svg\";","import React from 'react';\n// antd\nimport { Divider } from 'antd';\nimport { CopyrightOutlined, AntDesignOutlined } from '@ant-design/icons';\n\n/**\n * global footer\n * @param {boolean} divider\n */\nfunction Footer(props) {\n  return (\n    <div className=\"footer\">\n      {props.divider && <Divider />}\n      <div className=\"footer-content\">\n        <div>\n          <CopyrightOutlined />\n          <span>&nbsp;Copyright 2020 DSRKafuU | Apache-2.0 License</span>\n        </div>\n        <div>\n          <AntDesignOutlined />\n          <span>&nbsp;NJUPT B18030620</span>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default Footer;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n// antd\nimport { Button, Space } from 'antd';\n// css\nimport HomeChecked from '../../assets/svg/HomeChecked.svg';\nimport './index.scss';\n// comps\nimport Footer from '../../components/Footer';\n\n// home page\nfunction Home() {\n  return (\n    <div className=\"home\">\n      <div className=\"home-title\">\n        <img src={HomeChecked} className=\"home-title-logo\" alt=\"Title Logo\" />\n        <h1 className=\"home-title-name\">四则运算自测系统</h1>\n        <div className=\"home-title-btns\">\n          <Space size=\"large\">\n            <Link to=\"/app/start\" component={Button} type=\"primary\" size=\"large\">\n              开始\n            </Link>\n            <Link to=\"/app/about\" component={Button} size=\"large\">\n              关于\n            </Link>\n          </Space>\n        </div>\n      </div>\n      <Footer divider={false} />\n    </div>\n  );\n}\n\nexport default Home;\n","import React from 'react';\n// store\nimport { useSelector, useDispatch } from 'react-redux';\nimport { actionQuestionTypes } from '../../../../store/start/actions';\n// antd\nimport { Slider, InputNumber } from 'antd';\n\n/**\n * one question type\n * @param {string} typeText type name\n * @param {string} typeKey type key\n */\nfunction QuestionType(props) {\n  const dispatch = useDispatch();\n  // get data from props\n  const { typeText, typeKey } = props;\n  // get question type numbers\n  const number = useSelector((state) => state.getIn(['start', 'questionTypes', typeKey]));\n  /**\n   * update question types\n   * @param {number} value\n   */\n  const updateQuestionTypes = (value) => {\n    if (isNaN(value)) {\n      return;\n    }\n    // dispatch update\n    return dispatch(actionQuestionTypes({ [typeKey]: value }));\n  };\n\n  return (\n    <div className=\"question-types-item\">\n      <span>{typeText}</span>\n      <Slider min={0} max={10} value={number} onChange={updateQuestionTypes} />\n      <InputNumber min={0} max={10} value={number} onChange={updateQuestionTypes} />\n    </div>\n  );\n}\n\nexport default QuestionType;\n","import React from 'react';\n// store\nimport { useSelector, useDispatch } from 'react-redux';\nimport { actionQuestionSettings } from '../../../../store/start/actions';\n// antd\nimport { Radio, Switch, Select } from 'antd';\n\n// question settings section\nfunction QuestionSettings() {\n  // store dispatch\n  const dispatch = useDispatch();\n  // get settings data\n  const settings = useSelector((state) => state.getIn(['start', 'questionSettings']).toJS());\n  // che if is custom mode\n  const isCustom = settings.hhc === 'custom';\n\n  /**\n   * update hhc\n   * @param {event} e\n   */\n  const updateHhc = (e) => dispatch(actionQuestionSettings({ hhc: e.target.value.split('-')[1] }));\n  /**\n   * update range, parse string to number\n   * @param {event} e\n   */\n  const updateRange = (e) =>\n    dispatch(actionQuestionSettings({ range: +e.target.value.split('-')[1] }));\n  /**\n   * update switches\n   * @param {boolean} checked\n   * @param {string} key\n   */\n  const updateSwitch = (checked, key) => dispatch(actionQuestionSettings({ [key]: checked }));\n  /**\n   * update dot range\n   * @param {string} value\n   */\n  const updateDotRange = (value) =>\n    dispatch(actionQuestionSettings({ dotRange: +value.split('-')[1] }));\n\n  return (\n    <div className=\"question-settings\">\n      <h3>难度与细节设置</h3>\n      <div className=\"question-settings-item\">\n        <span>难度</span>\n        <Radio.Group value={`hdc-${settings.hhc}`} onChange={updateHhc} buttonStyle=\"solid\">\n          <Radio.Button value=\"hdc-easy\">简单</Radio.Button>\n          <Radio.Button value=\"hdc-hard\">困难</Radio.Button>\n          <Radio.Button value=\"hdc-custom\">自定义</Radio.Button>\n        </Radio.Group>\n      </div>\n      <div className=\"question-settings-item\">\n        <span>数值范围「绝对值」</span>\n        <Radio.Group\n          value={`range-${settings.range}`}\n          onChange={updateRange}\n          disabled={!isCustom}\n          buttonStyle=\"solid\"\n        >\n          <Radio.Button value=\"range-10\">10</Radio.Button>\n          <Radio.Button value=\"range-100\">100</Radio.Button>\n          <Radio.Button value=\"range-1000\">1000</Radio.Button>\n        </Radio.Group>\n        <span>以内</span>\n      </div>\n      <div className=\"question-settings-item\">\n        <div>\n          <span>负数</span>\n          <Switch\n            checked={settings.minus}\n            disabled={!isCustom}\n            onChange={(checked) => updateSwitch(checked, 'minus')}\n            checkedChildren=\"开启\"\n            unCheckedChildren=\"关闭\"\n          />\n        </div>\n        <div>\n          <span>括号</span>\n          <Switch\n            checked={settings.bracket}\n            disabled={!isCustom}\n            onChange={(checked) => updateSwitch(checked, 'bracket')}\n            checkedChildren=\"开启\"\n            unCheckedChildren=\"关闭\"\n          />\n        </div>\n      </div>\n      <div className=\"question-settings-item\">\n        <div>\n          <span>小数</span>\n          <Switch\n            checked={settings.dot}\n            disabled={!isCustom}\n            onChange={(checked) => updateSwitch(checked, 'dot')}\n            checkedChildren=\"开启\"\n            unCheckedChildren=\"关闭\"\n          />\n        </div>\n        <div>\n          <span>小数位数</span>\n          <Select disabled={!isCustom} value={`dot-${settings.dotRange}`} onChange={updateDotRange}>\n            <Select.Option value=\"dot-1\">1</Select.Option>\n            <Select.Option value=\"dot-2\">2</Select.Option>\n            <Select.Option value=\"dot-3\">3</Select.Option>\n          </Select>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default QuestionSettings;\n","import React from 'react';\n// antd\nimport { Button, Space, Popconfirm, message } from 'antd';\nimport { RestOutlined, GithubOutlined } from '@ant-design/icons';\n// store\nimport { useDispatch } from 'react-redux';\nimport { actionCleanSettingsCache } from '../../../../store/start/actions';\nimport { actionCleanHistoryCache } from '../../../../store/test/actions';\n\n// question control question\nfunction QuestionCtrl() {\n  const dispatch = useDispatch();\n\n  return (\n    <div className=\"question-ctrl\">\n      <h3 className=\"question-ctrl-func\">全局功能</h3>\n      <Space>\n        <Popconfirm\n          placement=\"bottom\"\n          title=\"确定要清除数据吗\"\n          onConfirm={() => {\n            dispatch(actionCleanSettingsCache());\n            dispatch(actionCleanHistoryCache());\n            message.success('已清除数据');\n          }}\n        >\n          <Button icon={<RestOutlined />}>清除数据</Button>\n        </Popconfirm>\n        <Button\n          icon={<GithubOutlined />}\n          href=\"https://github.com/amzrk2/pouni-calculation-tester\"\n          target=\"_blank\"\n        >\n          GitHub\n        </Button>\n      </Space>\n      <h3 className=\"question-ctrl-notice\">提示</h3>\n      <h4>小数开启</h4>\n      <span>答案请化为与设置的位数相同的精度</span>\n      <h4>负数/小数/数值范围</h4>\n      <span>这些设置项对生成的答案同样有效</span>\n    </div>\n  );\n}\n\nexport default QuestionCtrl;\n","import React from 'react';\n// antd\nimport { Row, Col } from 'antd';\n// css\nimport './index.scss';\n// comps\nimport QuestionType from './components/QuestionType';\nimport QuestionSettings from './components/QuestionSettings';\nimport QuestionCtrl from './components/QuestionCtrl';\n\n// start page\nfunction Start() {\n  return (\n    <div className=\"start\">\n      <Row gutter={[0, 32]}>\n        <Col xs={24} md={8}>\n          <div className=\"question-types\">\n            <h3>类型与数量调整</h3>\n            <QuestionType typeText=\"填空题\" typeKey=\"fillBlank\" />\n            <QuestionType typeText=\"判断题\" typeKey=\"judge\" />\n            <QuestionType typeText=\"选择题\" typeKey=\"select\" />\n          </div>\n        </Col>\n        <Col xs={24} md={8}>\n          <QuestionSettings />\n        </Col>\n        <Col xs={24} md={8}>\n          <QuestionCtrl />\n        </Col>\n      </Row>\n    </div>\n  );\n}\n\nexport default Start;\n","import { evaluate } from 'mathjs';\n\nconst defaultSettings = {\n  hhc: 'easy',\n  range: 10,\n  minus: false,\n  bracket: false,\n  dot: false,\n  dotRange: 1,\n};\n\nclass ExpGen {\n  /**\n   * @constructor\n   */\n  constructor() {\n    // init settings\n    this._updateSettings(defaultSettings);\n  }\n\n  /**\n   * @private\n   * update generator settings\n   * @param {object} settings\n   */\n  _updateSettings(settings) {\n    this.hhc = settings.hhc;\n    this.range = settings.range;\n    this.minus = settings.minus;\n    this.bracket = settings.bracket;\n    this.dot = settings.dot;\n    this.dotRange = settings.dotRange;\n  }\n\n  /**\n   * @private\n   * get random number\n   * @param {number} min\n   * @param {number} max\n   */\n  _getRandomNumber(min, max) {\n    const range = max - min;\n    const rand = Math.random(); // 0.0-1.0\n    return min + Math.round(rand * range);\n  }\n\n  /**\n   * @private\n   * gen a expression (un processed)\n   */\n  _genExpression() {\n    // gen elements\n    let elementArray = [];\n    // el number\n    const elementNumber = this._getRandomNumber(2, 5);\n    for (let i = 0; i < elementNumber; i++) {\n      elementArray.push(this._getRandomNumber(0, this.range));\n    }\n    // if dot\n    if (this.dot) {\n      elementArray = elementArray.map((val) => {\n        // gen dot number\n        let dotNum = '';\n        for (let i = 0; i < this.dotRange; i++) {\n          dotNum = dotNum.concat(this._getRandomNumber(0, 9));\n        }\n        return `${val}.${dotNum}`;\n      });\n    }\n    // if minus\n    if (this.minus) {\n      elementArray = elementArray.map((val) => {\n        // random minus\n        const rand = Math.random();\n        if (rand - 0.5 > 0) {\n          return val;\n        } else {\n          return `(-${val})`;\n        }\n      });\n    }\n    // cals\n    const calsArray = [];\n    for (let i = 0; i < elementNumber - 1; i++) {\n      calsArray.push([' + ', ' - ', ' * ', ' / '][this._getRandomNumber(0, 3)]);\n    }\n    // gen expression\n    const expression = [];\n    for (let i = 0; i < 2 * elementNumber - 1; i++) {\n      if (i % 2 === 0) {\n        expression.push(elementArray.shift());\n      } else {\n        expression.push(calsArray.shift());\n      }\n    }\n    // return expressiong\n    return expression.join('');\n  }\n\n  /**\n   * insert brackets, element number need to > 3\n   * @param {string} exp\n   */\n  _insertBracket(exp) {\n    const startRand = Math.random() - 0.5;\n    const endRand = Math.random() - 0.5;\n    const elements = exp.split(' ');\n    let startIndex, endIndex;\n    // find first op\n    for (let i = 0; i < elements.length; i++) {\n      if (['+', '-', '*', '/'].includes(elements[i])) {\n        startIndex = i;\n        break;\n      }\n    }\n    // find second op\n    if (startRand > 0) {\n      for (let i = startIndex; i < elements.length; i++) {\n        if (['+', '-', '*', '/'].includes(elements[i])) {\n          startIndex = i;\n          break;\n        }\n      }\n    }\n    // find last first op\n    for (let i = elements.length - 1; i >= 0; i--) {\n      if (['+', '-', '*', '/'].includes(elements[i])) {\n        endIndex = i;\n        break;\n      }\n    }\n    // find last second op\n    if (endRand > 0) {\n      for (let i = endIndex; i >= 0; i--) {\n        if (['+', '-', '*', '/'].includes(elements[i])) {\n          endIndex = i;\n          break;\n        }\n      }\n    }\n    // insert bracket\n    if (endIndex - startIndex !== 4 && endIndex - 1 > startIndex + 1) {\n      elements.splice(startIndex + 1, 0, '(');\n      elements.splice(endIndex - 1, 0, ')');\n      return elements.join(' ');\n    } else {\n      return exp;\n    }\n  }\n\n  /**\n   * @public\n   * generate expressions, returns a promise\n   * @param {number} number\n   * @param {objext} settings\n   */\n  getExpressions(number, settings) {\n    return new Promise((resolve, reject) => {\n      try {\n        // if pssed in settings, update settings\n        if (settings) {\n          const s = { ...defaultSettings, ...settings };\n          this._updateSettings(s);\n        }\n        // gen expressions\n        const exps = [];\n        for (let i = 0; i < number; i++) {\n          let exp = this._genExpression();\n          this.bracket && (exp = this._insertBracket(exp)); // insert bracket\n          let ans = evaluate(exp);\n          // prevent minus and dot\n          let checker;\n          switch (true) {\n            case !this.minus && !this.dot:\n              checker = (ans) =>\n                Number.isFinite(ans) &&\n                !Number.isNaN(ans) &&\n                ans % 1 === 0 &&\n                ans >= 0 &&\n                Math.abs(Math.round(ans)) < settings.range;\n              break;\n            case !this.minus && this.dot:\n              checker = (ans) =>\n                Number.isFinite(ans) &&\n                !Number.isNaN(ans) &&\n                ans >= 0 &&\n                Math.abs(Math.round(ans)) < settings.range;\n              break;\n            case this.minus && !this.dot:\n              checker = (ans) =>\n                Number.isFinite(ans) &&\n                !Number.isNaN(ans) &&\n                ans % 1 === 0 &&\n                Math.abs(Math.round(ans)) < settings.range;\n              break;\n            default:\n              checker = (ans) =>\n                Number.isFinite(ans) &&\n                !Number.isNaN(ans) &&\n                Math.abs(Math.round(ans)) < settings.range;\n          }\n          while (!checker(ans)) {\n            exp = this._genExpression();\n            this.bracket && (exp = this._insertBracket(exp)); // insert bracket\n            ans = evaluate(exp);\n          }\n          // if dot, floor to same dot range\n          if (this.dot) {\n            ans = ans.toFixed(this.dotRange);\n          } else {\n            ans = ans.toString();\n          }\n          // add exp\n          exps.push({ exp, ans });\n        }\n        resolve(exps);\n      } catch (e) {\n        reject(e);\n      }\n    });\n  }\n}\n\nexport default ExpGen;\n","/**\n * @private\n * get random number\n * @param {number} min\n * @param {number} max\n */\nfunction _getRandomNumber(min, max) {\n  const range = max - min;\n  const rand = Math.random(); // 0.0-1.0\n  return min + Math.round(rand * range);\n}\n\n/**\n * generate fill in blank questions\n * @param {array} rawExps\n */\nfunction _genFillBlank(rawExps) {\n  const questions = rawExps.map((val, index) => ({\n    index,\n    exp: val.exp,\n    ans: val.ans,\n    userAns: '',\n    status: null,\n  }));\n  return questions;\n}\n\n/**\n * generate judge questions\n * @param {array} rawExps\n * @param {number} dotRange\n */\nfunction _genJudge(rawExps, dotRange) {\n  const questions = rawExps.map((val, index) => {\n    const newVal = { index, userAns: null, status: null };\n    const rand = _getRandomNumber(0, 1);\n    if (rand === 1) {\n      newVal.exp = `${val.exp} = ${val.ans}`;\n      newVal.ans = true;\n    } else {\n      newVal.exp = `${val.exp} = ${(Number(val.ans) + _getRandomNumber(1, 50)).toFixed(dotRange)}`;\n      newVal.ans = false;\n    }\n    return newVal;\n  });\n  return questions;\n}\n\n/**\n * generate select questions\n * @param {array} rawExps\n * @param {number} dotRange\n */\nfunction _genSelect(rawExps, dotRange) {\n  const questions = rawExps.map((val, index) => {\n    const newVal = { index, exp: val.exp, userAns: null, status: null };\n    const rand = _getRandomNumber(0, 2);\n    const selections = [\n      (Number(val.ans) + _getRandomNumber(1, 50)).toFixed(dotRange),\n      (Number(val.ans) + _getRandomNumber(1, 50)).toFixed(dotRange),\n      (Number(val.ans) + _getRandomNumber(1, 50)).toFixed(dotRange),\n    ];\n    selections[rand] = val.ans;\n    newVal.selections = selections;\n    newVal.ans = rand;\n    return newVal;\n  });\n  return questions;\n}\n\n/**\n * generate questions\n * @param {array} rawExps\n * @param {number} fillBlank\n * @param {number} judge\n * @param {number} select\n * @param {object} settings\n */\nfunction genQuestions(rawExps, fillBlank, judge, select, settings) {\n  let fillBlankExps = [];\n  for (let i = 0; i < fillBlank; i++) {\n    fillBlankExps.push(rawExps.shift());\n  }\n  fillBlankExps = _genFillBlank(fillBlankExps);\n  let judgeExps = [];\n  for (let i = fillBlank; i < fillBlank + judge; i++) {\n    judgeExps.push(rawExps.shift());\n  }\n  judgeExps = _genJudge(judgeExps, settings.dot ? settings.dotRange : 0);\n  let selectExps = [];\n  for (let i = fillBlank + judge; i < fillBlank + judge + select; i++) {\n    selectExps.push(rawExps.shift());\n  }\n  selectExps = _genSelect(selectExps, settings.dot ? settings.dotRange : 0);\n  return {\n    fillBlankQuestions: fillBlankExps,\n    judgeQuestions: judgeExps,\n    selectQuestions: selectExps,\n  };\n}\n\nexport default genQuestions;\n","import React from 'react';\n// store\nimport { useDispatch } from 'react-redux';\nimport {\n  actionFillBlankQuestions,\n  actionJudgeQuestions,\n  actionSelectQuestions,\n} from '../../../../store/test/actions';\n// antd\nimport { Table, Input, Radio } from 'antd';\nimport { CheckOutlined, CloseOutlined } from '@ant-design/icons';\n\n/**\n * gen a test selection\n * @param {object} questions question array\n * @param {object} questionType question type of this array\n */\nfunction TestSection(props) {\n  const dispatch = useDispatch();\n  // get props\n  const { questions, questionType } = props;\n\n  // check question type\n  let columnTitle = '';\n  let columnRender = null;\n  // different render func\n  if (questionType === 'fillBlank') {\n    columnTitle = '填空';\n    columnRender = (record) => (\n      <Input\n        value={record.userAns}\n        onChange={(e) => {\n          const value = e.target.value;\n          dispatch(actionFillBlankQuestions({ index: record.index, answer: value }));\n        }}\n      />\n    );\n  } else if (questionType === 'judge') {\n    columnTitle = '判断';\n    columnRender = (record) => (\n      <Radio.Group\n        className=\"radio-group-judge\"\n        optionType=\"button\"\n        options={[\n          {\n            label: <CheckOutlined />,\n            value: true,\n          },\n          {\n            label: <CloseOutlined />,\n            value: false,\n          },\n        ]}\n        value={record.userAns}\n        onChange={(e) => {\n          const value = e.target.value;\n          dispatch(actionJudgeQuestions({ index: record.index, answer: value }));\n        }}\n      />\n    );\n  } else {\n    columnTitle = '选择';\n    columnRender = (record) => (\n      <Radio.Group\n        options={[\n          { label: record.selections[0], value: 0 },\n          { label: record.selections[1], value: 1 },\n          { label: record.selections[2], value: 2 },\n        ]}\n        value={record.userAns}\n        onChange={(e) => {\n          const value = e.target.value;\n          dispatch(actionSelectQuestions({ index: record.index, answer: value }));\n        }}\n      />\n    );\n  }\n\n  return (\n    <div className=\"test-section\">\n      <Table\n        dataSource={questions}\n        rowKey={(record) => record.index}\n        pagination={false}\n        size=\"middle\"\n        tableLayout=\"fixed\"\n      >\n        <Table.Column title=\"题目\" dataIndex=\"exp\" key=\"exp\" align=\"right\" width=\"60%\" />\n        <Table.Column title={columnTitle} key=\"userAns\" render={columnRender} />\n      </Table>\n    </div>\n  );\n}\n\nexport default TestSection;\n","import React from 'react';\nimport { useHistory } from 'react-router-dom';\n// store\nimport { useDispatch, useSelector } from 'react-redux';\nimport { actionAllQuestions, actionSaveAllQuestion } from '../../../../store/test/actions';\n// antd\nimport { Button, Popconfirm, message } from 'antd';\nimport { RedoOutlined, LoginOutlined } from '@ant-design/icons';\n\n/**\n * test control section\n * @param {object} props\n */\nfunction TestCtrl(props) {\n  const dispatch = useDispatch();\n  const history = useHistory();\n  // get props\n  const { setLoading } = props;\n  // get history\n  const qHistory = useSelector((state) => state.getIn(['test', 'history']).toJS());\n  // gen id jump to\n  let ID;\n  if (qHistory[qHistory.length - 1]) {\n    ID = qHistory[qHistory.length - 1].historyID + 1;\n  } else {\n    ID = 0;\n  }\n\n  return (\n    <div className=\"test-ctrl\">\n      <div className=\"crtl-wrapper\">\n        <Popconfirm\n          placement=\"bottom\"\n          title=\"确定要重新生成题目吗\"\n          onConfirm={() => {\n            setLoading(true);\n            dispatch(actionAllQuestions(null));\n            message.success('已重新生成');\n          }}\n        >\n          <Button size=\"large\" icon={<RedoOutlined />} danger={true} />\n        </Popconfirm>\n        <Popconfirm\n          placement=\"bottom\"\n          title=\"确定要提交答案吗\"\n          onConfirm={() => {\n            dispatch(actionSaveAllQuestion());\n            message.success('提交成功');\n            history.push(`/app/history/${ID}`);\n          }}\n        >\n          <Button type=\"primary\" size=\"large\" icon={<LoginOutlined />} />\n        </Popconfirm>\n      </div>\n    </div>\n  );\n}\n\nexport default TestCtrl;\n","import React, { useEffect, useState } from 'react';\n// store\nimport { useSelector, useDispatch } from 'react-redux';\nimport { actionAllQuestions } from '../../store/test/actions';\n// antd\nimport { Spin } from 'antd';\n// css\nimport './index.scss';\n// exp gens\nimport ExpGen from '../../plugins/ExpGen';\nimport genQuestions from '../../plugins/genQuestions';\n// components\nimport TestSection from './components/TestSection';\nimport TestCtrl from './components/TestCtrl';\n\n// exp generator\nconst expGen = new ExpGen();\n\nfunction Test() {\n  const dispatch = useDispatch();\n  // get settings data\n  const { fillBlank, judge, select } = useSelector((state) =>\n    state.getIn(['start', 'questionTypes']).toJS()\n  );\n  const questionSettings = useSelector((state) =>\n    state.getIn(['start', 'questionSettings']).toJS()\n  );\n  // get questions\n  const { fillBlankQuestions, judgeQuestions, selectQuestions } = useSelector((state) => {\n    return state.get('test').toJS();\n  });\n  // check question status\n  const questionsAreEmpty = !(\n    fillBlankQuestions.length > 0 ||\n    judgeQuestions.length > 0 ||\n    selectQuestions.length > 0\n  );\n  // question loading animation\n  const [loading, setLoading] = useState(true);\n\n  // update questions when data changed\n  // and if currentQuestions been reset to {}\n  // it will run again to gen new questions\n  useEffect(() => {\n    // if question arrays are empty\n    if (questionsAreEmpty) {\n      (async () => {\n        const rawExps = await expGen.getExpressions(fillBlank + judge + select, questionSettings);\n        const questions = genQuestions(rawExps, fillBlank, judge, select, questionSettings);\n        setTimeout(() => {\n          dispatch(actionAllQuestions(questions));\n          setLoading(false);\n        }, 500);\n      })();\n    } else {\n      setLoading(false);\n    }\n  }, [dispatch, fillBlank, judge, questionSettings, questionsAreEmpty, select]);\n\n  return (\n    <div className=\"test\">\n      <Spin spinning={loading}>\n        <div className=\"test-wrapper\">\n          {fillBlankQuestions.length > 0 && (\n            <TestSection questions={fillBlankQuestions} questionType=\"fillBlank\" />\n          )}\n          {judgeQuestions.length > 0 && (\n            <TestSection questions={judgeQuestions} questionType=\"judge\" />\n          )}\n          {selectQuestions.length > 0 && (\n            <TestSection questions={selectQuestions} questionType=\"select\" />\n          )}\n        </div>\n      </Spin>\n      <TestCtrl setLoading={setLoading} />\n    </div>\n  );\n}\n\nexport default Test;\n","import React from 'react';\nimport { useRouteMatch, Link } from 'react-router-dom';\n// dayjs\nimport * as dayjs from 'dayjs';\n// store\nimport { useSelector, useDispatch } from 'react-redux';\nimport { actionRemoveHistory, actionLoadHistory } from '../../store/test/actions';\n// antd\nimport { Table, Button, Space, Popconfirm, message } from 'antd';\nimport {\n  CloudDownloadOutlined,\n  CloudUploadOutlined,\n  DeleteOutlined,\n  FileDoneOutlined,\n} from '@ant-design/icons';\n// css\nimport './index.scss';\n// file loader and saver\nimport CustomFile from '../../plugins/CustomFile';\nconst cf = new CustomFile();\n\nfunction HistoryIndex() {\n  const dispatch = useDispatch();\n  // get router match\n  const match = useRouteMatch();\n  // get all history\n  const history = useSelector((state) => {\n    return state.getIn(['test', 'history']).toJS();\n  });\n\n  return (\n    <div className=\"history-index\">\n      <div className=\"history-wrapper\">\n        <Table\n          dataSource={history}\n          rowKey={(record) => record.historyID}\n          pagination={false}\n          size=\"small\"\n          tableLayout=\"fixed\"\n        >\n          <Table.Column\n            title=\"ID\"\n            dataIndex=\"historyID\"\n            key=\"historyID\"\n            align=\"center\"\n            width=\"15%\"\n          />\n          <Table.Column\n            title=\"日期/时间\"\n            key=\"date\"\n            align=\"center\"\n            render={(value) => dayjs(value.date).format('YYYY-MM-DD HH:mm')}\n          />\n          <Table.Column\n            title=\"正确率\"\n            dataIndex=\"correctRate\"\n            key=\"correctRate\"\n            align=\"center\"\n            width=\"20%\"\n          />\n          <Table.Column\n            title=\"控制\"\n            key=\"control\"\n            align=\"center\"\n            render={(record) => (\n              <Space>\n                <Link\n                  to={`${match.path}/${record.historyID}`}\n                  component={Button}\n                  type=\"primary\"\n                  icon={<FileDoneOutlined />}\n                >\n                  详情\n                </Link>\n                <Popconfirm\n                  placement=\"bottom\"\n                  title=\"确定要删除本条记录吗\"\n                  onConfirm={() => {\n                    dispatch(actionRemoveHistory(record.historyID));\n                    message.success('已删除本条记录');\n                  }}\n                >\n                  <Button danger={true} icon={<DeleteOutlined />}>\n                    删除\n                  </Button>\n                </Popconfirm>\n              </Space>\n            )}\n          />\n        </Table>\n      </div>\n      <div className=\"history-ctrl\">\n        <div className=\"crtl-wrapper\">\n          <Button\n            size=\"large\"\n            icon={<CloudUploadOutlined />}\n            onClick={async () => {\n              const obj = await cf.load();\n              dispatch(actionLoadHistory(obj));\n            }}\n          />\n          <Button\n            type=\"primary\"\n            size=\"large\"\n            icon={<CloudDownloadOutlined />}\n            onClick={() => cf.save(history)}\n          />\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default HistoryIndex;\n","import * as dayjs from 'dayjs';\n\n/**\n * file class\n */\nclass CustomFile {\n  /**\n   * save the object to file\n   * @param {object} obj\n   */\n  save(obj) {\n    let json;\n    try {\n      json = JSON.stringify(obj);\n      // create file blob\n      const blob = new Blob([json]);\n      // create download dom element\n      const link = document.createElement('a');\n      link.href = URL.createObjectURL(blob);\n      link.download = `${dayjs().toJSON().replace(/:/g, '_')}.json`;\n      // supprot firefox\n      link.style.display = 'none';\n      document.body.appendChild(link);\n      link.click();\n      document.body.removeChild(link);\n    } catch (e) {\n      console.error(e);\n    }\n  }\n\n  /**\n   * async load a json file\n   * @returns a promise\n   */\n  async load() {\n    return new Promise((resolve, reject) => {\n      const input = document.createElement('input');\n      input.type = 'file';\n      input.accept = 'application/json';\n      input.style.display = 'none';\n      input.addEventListener('change', () => {\n        if (input.files.length > 0) {\n          // get the json file\n          const file = input.files[0];\n          if (file.type.includes('json')) {\n            const reader = new FileReader();\n            reader.onload = (e) => {\n              const res = e.target.result;\n              try {\n                const obj = JSON.parse(res);\n                resolve(obj);\n              } catch (e) {\n                reject(e);\n              }\n            };\n            reader.readAsText(file);\n          } else {\n            reject(new Error('wrong file MIME type'));\n          }\n        } else {\n          reject(new Error('no file selected'));\n        }\n      });\n      input.click();\n    });\n  }\n}\n\nexport default CustomFile;\n","import React from 'react';\nimport { useHistory } from 'react-router-dom';\n// antd\nimport { Button, Popconfirm, message } from 'antd';\nimport { DeleteOutlined, ShareAltOutlined } from '@ant-design/icons';\n// store\nimport { useDispatch } from 'react-redux';\nimport { actionRemoveHistory } from '../../../../store/test/actions';\n\n/**\n * history control section\n * @param {string} historyID\n */\nfunction HistoryCtrl(props) {\n  const dispatch = useDispatch();\n  const { historyID } = props;\n  const h = useHistory();\n\n  return (\n    <div className=\"history-ctrl\">\n      <div className=\"crtl-wrapper\">\n        <Popconfirm\n          placement=\"bottom\"\n          title=\"确定要删除本条记录吗\"\n          onConfirm={() => {\n            dispatch(actionRemoveHistory(historyID));\n            h.push('/app/history');\n            message.success('已删除本条记录');\n          }}\n        >\n          <Button size=\"large\" icon={<DeleteOutlined />} danger={true} />\n        </Popconfirm>\n        <Button type=\"primary\" size=\"large\" icon={<ShareAltOutlined />} />\n      </div>\n    </div>\n  );\n}\n\nexport default HistoryCtrl;\n","import React from 'react';\n// antd\nimport { Table } from 'antd';\nimport {\n  CheckCircleTwoTone,\n  CloseCircleTwoTone,\n  CheckOutlined,\n  CloseOutlined,\n} from '@ant-design/icons';\n\n/**\n * status render\n * @param {boolean} status\n */\nconst renderStatus = (status) =>\n  status ? (\n    <CheckCircleTwoTone twoToneColor=\"#52c41a\" />\n  ) : (\n    <CloseCircleTwoTone twoToneColor=\"#ff7875\" />\n  );\n/**\n * answer render\n * fix: prevent null rendered as CloseOutlined\n * @param {boolean} ans\n */\nconst renderAnswer = (ans) => {\n  if (ans === null || ans === undefined) {\n    return '';\n  } else {\n    return ans === false ? <CloseOutlined /> : <CheckOutlined />;\n  }\n};\n\n/**\n * gen a history selection\n * @param {object} questions question array\n * @param {object} questionType question type of this array\n */\nfunction HistorySection(props) {\n  // get props\n  const { questions, questionType } = props;\n\n  // check question type\n  let columnTitle = '';\n  let ansRender = null;\n  let userAnsRender = null;\n  // gen different columns\n  if (questionType === 'fillBlank') {\n    columnTitle = '填空题目';\n    ansRender = 'ans';\n    userAnsRender = 'userAns';\n  } else if (questionType === 'judge') {\n    columnTitle = '判断题目';\n    ansRender = (record) => renderAnswer(record.ans);\n    userAnsRender = (record) => renderAnswer(record.userAns);\n  } else {\n    columnTitle = '选择题目';\n    ansRender = (record) => record.selections[record.ans];\n    userAnsRender = (record) => record.selections[record.userAns];\n  }\n\n  return (\n    <Table\n      dataSource={questions}\n      rowKey={(record) => record.index}\n      pagination={false}\n      size=\"small\"\n      tableLayout=\"fixed\"\n    >\n      <Table.Column title={columnTitle} dataIndex=\"exp\" key=\"exp\" align=\"center\" width=\"50%\" />\n      <Table.Column\n        title=\"正确答案\"\n        key=\"ans\"\n        align=\"center\"\n        dataIndex={typeof ansRender === 'string' ? ansRender : null}\n        render={typeof ansRender === 'function' ? ansRender : null}\n      />\n      <Table.Column\n        title=\"你的答案\"\n        key=\"userAns\"\n        align=\"center\"\n        dataIndex={typeof userAnsRender === 'string' ? userAnsRender : null}\n        render={typeof userAnsRender === 'function' ? userAnsRender : null}\n      />\n      <Table.Column\n        title=\"状态\"\n        key=\"status\"\n        align=\"center\"\n        render={(record) => renderStatus(record.status)}\n        width=\"10%\"\n      />\n    </Table>\n  );\n}\n\nexport default HistorySection;\n","import React from 'react';\nimport { useParams } from 'react-router-dom';\n// store\nimport { useSelector } from 'react-redux';\n// css\nimport './index.scss';\n// comps\nimport HistoryCtrl from './components/HistoryCtrl';\nimport HistorySection from './components/HistorySection';\n\n// single history page\nfunction History() {\n  // get current history id\n  const { historyID } = useParams();\n  // get data of this id\n  const allHistory = useSelector((state) => state.getIn(['test', 'history']).toJS());\n  let history;\n  allHistory.forEach((val) => {\n    // fix: different type (string, number)\n    if (val.historyID === +historyID) {\n      history = val;\n    }\n  });\n  // get questions\n  let fillBlankQuestions = [];\n  let judgeQuestions = [];\n  let selectQuestions = [];\n  if (history) {\n    fillBlankQuestions = history.historyQuestions.fillBlankQuestions;\n    judgeQuestions = history.historyQuestions.judgeQuestions;\n    selectQuestions = history.historyQuestions.selectQuestions;\n  }\n\n  return (\n    <div className=\"history\">\n      <div className=\"history-wrapper\">\n        {fillBlankQuestions.length > 0 && (\n          <HistorySection questions={fillBlankQuestions} questionType=\"fillBlank\" />\n        )}\n        {judgeQuestions.length > 0 && (\n          <HistorySection questions={judgeQuestions} questionType=\"judge\" />\n        )}\n        {selectQuestions.length > 0 && (\n          <HistorySection questions={selectQuestions} questionType=\"select\" />\n        )}\n      </div>\n      <HistoryCtrl historyID={+historyID} />\n    </div>\n  );\n}\n\nexport default History;\n","import React from 'react';\n// css\nimport './index.scss';\n\n// about page\nfunction About() {\n  return (\n    <div className=\"about\">\n      <h2>四则运算自测系统</h2>\n      <p>项目由 Create React App 创建。</p>\n      <h3>项目日程</h3>\n      <p>\n        <ul>\n          <li>2020-10-26: 基础架构/主页设计/存储架构/题目生成设置</li>\n          <li>2020-10-27: 题目生成设置/路由设置/测试内容页面/表达式生成器</li>\n          <li>2020-10-28: 答案检查器/历史页面样式/存储架构修改</li>\n          <li>2020-10-29: 历史页面功能/用户体验优化/错误修复/图标优化</li>\n        </ul>\n      </p>\n      <h3>开源依赖</h3>\n      <p>\n        <ul>\n          <li>基础框架: React/React Router</li>\n          <li>数据存储: Redux/Immutable.js</li>\n          <li>样式: normalize.css/Ant Design/Sass</li>\n          <li>其他: Math.js/dayjs/craco/cross-env</li>\n        </ul>\n      </p>\n    </div>\n  );\n}\n\nexport default About;\n","import React from 'react';\nimport { Switch, Route, Link, useRouteMatch, withRouter, Redirect } from 'react-router-dom';\n// antd\nimport { Menu } from 'antd';\nimport {\n  SettingOutlined,\n  FormOutlined,\n  HistoryOutlined,\n  InfoCircleOutlined,\n} from '@ant-design/icons';\n// views\nimport Footer from './components/Footer';\nimport Start from './views/Start';\nimport Test from './views/Test';\nimport HistoryIndex from './views/HistoryIndex';\nimport History from './views/History';\nimport About from './views/About';\n\n// app main page (with history)\nconst App = withRouter(({ history }) => {\n  // router match\n  const match = useRouteMatch();\n  // main menu items\n  const menuItems = [\n    {\n      key: 'start',\n      icon: <SettingOutlined />,\n      text: '开始',\n    },\n    {\n      key: 'test',\n      icon: <FormOutlined />,\n      text: '测试',\n    },\n    {\n      key: 'history',\n      icon: <HistoryOutlined />,\n      text: '历史记录',\n    },\n    {\n      key: 'about',\n      icon: <InfoCircleOutlined />,\n      text: '关于',\n    },\n  ];\n\n  return (\n    <div className=\"app\">\n      <Menu className=\"app-nav\" mode=\"horizontal\" selectedKeys={[history.location.pathname]}>\n        {menuItems.map((val) => (\n          <Menu.Item key={`${match.path}/${val.key}`}>\n            <Link to={`${match.path}/${val.key}`}>\n              {val.icon}\n              <span>{val.text}</span>\n            </Link>\n          </Menu.Item>\n        ))}\n      </Menu>\n      <div className=\"app-content\">\n        <Switch>\n          <Route path={`${match.path}/start`} component={Start} />\n          <Route path={`${match.path}/test`} component={Test} />\n          <Route path={`${match.path}/history/:historyID`} component={History} />\n          <Route path={`${match.path}/history`} component={HistoryIndex} />\n          <Route path={`${match.path}/about`} component={About} />\n          <Redirect to=\"/\" />\n        </Switch>\n      </div>\n      <Footer divider={true} />\n    </div>\n  );\n});\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { HashRouter as Router, Switch, Route, Redirect } from 'react-router-dom';\n// css\nimport 'normalize.css';\nimport './index.scss';\n// antd\nimport { ConfigProvider } from 'antd';\nimport zh_CN from 'antd/es/locale/zh_CN';\n// store\nimport { Provider } from 'react-redux';\nimport store from './store';\n// views\nimport Home from './views/Home';\nimport App from './App';\n\nReactDOM.render(\n  <Provider store={store}>\n    <ConfigProvider autoInsertSpaceInButton={false} locale={zh_CN}>\n      <Router>\n        <Switch>\n          <Route path=\"/app\" component={App} />\n          <Route exact path=\"/\" component={Home} />\n          <Redirect to=\"/\" />\n        </Switch>\n      </Router>\n    </ConfigProvider>\n  </Provider>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}