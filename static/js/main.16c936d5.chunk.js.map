{"version":3,"sources":["store/start/actions.js","plugins/LocalStorage.js","store/start/reducer.js","store/test/actions.js","store/test/reducer.js","store/reducer.js","store/index.js","assets/svg/HomeChecked.svg","components/Footer/index.js","views/Home/index.js","views/Start/components/QuestionType/index.js","views/Start/components/QuestionSettings/index.js","views/Start/components/QuestionCtrl/index.js","views/Start/index.js","plugins/ExpGen.js","plugins/genQuestions.js","views/Test/components/TestSection/index.js","views/Test/components/TestCtrl/index.js","views/Test/index.js","views/HistoryIndex/index.js","plugins/CustomFile.js","views/History/components/HistoryCtrl/index.js","views/History/components/HistorySection/index.js","views/History/index.js","App.js","index.js"],"names":["UPDATE_QUESTION_TYPES","UPDATE_QUESTION_SETTINGSS","actionQuestionSettings","value","type","SETTINGS","HISTORY","LocalStorage","obj","json","JSON","stringify","localStorage","setItem","e","console","error","parse","getItem","ls","EASY_SETTINGS","fromJS","hhc","range","minus","bracket","dot","dotRange","HARD_SETTINGS","defaultState","questionTypes","fillBlank","judge","select","questionSettings","reducer","prevState","action","newState","mergeDeep","toJS","save","settings","load","UPDATE_ALL_QUESTIONS","actionAllQuestions","UPDATE_FILL_BLANK_QUESTIONS","UPDATE_JUDGE_QUESTIONS","UPDATE_SELECT_QUESTIONS","SAVE_ALL_QUESTIONS","REMOVE_HISTORY","actionRemoveHistory","LOAD_HISTORY","fillBlankQuestions","judgeQuestions","selectQuestions","history","set","index","answer","oldList","get","newList","maxID","length","forEach","val","newHistory","historyID","historyQuestions","date","dayjs","toJSON","correctRate","allQuestions","correctQuestions","Object","keys","key","question","status","ans","userAns","toFixed","push","i","splice","lsHistory","combineReducers","start","test","enhancer","window","__REDUX_DEVTOOLS_EXTENSION__","store","createStore","Footer","props","className","divider","CopyrightOutlined","AntDesignOutlined","Home","src","HomeChecked","alt","size","to","component","QuestionType","dispatch","useDispatch","typeText","typeKey","number","useSelector","state","getIn","updateQuestionTypes","isNaN","actionQuestionTypes","min","max","onChange","QuestionSettings","isCustom","updateSwitch","checked","Group","target","split","buttonStyle","Button","disabled","checkedChildren","unCheckedChildren","Option","QuestionCtrl","icon","RestOutlined","GithubOutlined","href","Start","gutter","xs","md","defaultSettings","ExpGen","this","_updateSettings","rand","Math","random","round","elementArray","elementNumber","_getRandomNumber","map","dotNum","concat","calsArray","expression","shift","join","exp","startIndex","endIndex","startRand","endRand","elements","includes","Promise","resolve","reject","s","exps","_genExpression","_insertBracket","evaluate","checker","Number","isFinite","abs","toString","genQuestions","rawExps","fillBlankExps","_genFillBlank","judgeExps","newVal","_genJudge","selectExps","selections","_genSelect","TestSection","questions","questionType","columnTitle","columnRender","record","actionFillBlankQuestions","optionType","options","label","CheckOutlined","CloseOutlined","actionJudgeQuestions","actionSelectQuestions","dataSource","rowKey","pagination","tableLayout","Column","title","dataIndex","align","width","render","TestCtrl","ID","useHistory","setLoading","qHistory","placement","onConfirm","onCancel","RedoOutlined","danger","success","LoginOutlined","expGen","Test","questionsAreEmpty","useState","loading","useEffect","a","getExpressions","setTimeout","spinning","customFile","blob","Blob","link","document","createElement","URL","createObjectURL","download","replace","style","display","body","appendChild","click","removeChild","input","accept","addEventListener","files","file","reader","FileReader","onload","res","result","readAsText","Error","HistoryIndex","match","useRouteMatch","format","path","FileDoneOutlined","onClick","DeleteOutlined","CloudUploadOutlined","CloudDownloadOutlined","HistoryCtrl","ShareAltOutlined","renderAnswer","undefined","HistorySection","ansRender","userAnsRender","CheckCircleTwoTone","twoToneColor","CloseCircleTwoTone","History","useParams","h","App","withRouter","menuItems","SettingOutlined","text","FormOutlined","HistoryOutlined","InfoCircleOutlined","mode","selectedKeys","location","pathname","Item","ReactDOM","autoInsertSpaceInButton","locale","zh_CN","exact","getElementById"],"mappings":"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","file":"static/js/main.16c936d5.chunk.js","sourcesContent":["// update question types\nexport const UPDATE_QUESTION_TYPES = 'UPDATE_QUESTION_TYPES';\nexport const actionQuestionTypes = (value) => ({\n  type: UPDATE_QUESTION_TYPES,\n  value,\n});\n\n// update question settings\nexport const UPDATE_QUESTION_SETTINGSS = 'UPDATE_QUESTION_SETTINGSS';\nexport const actionQuestionSettings = (value) => ({\n  type: UPDATE_QUESTION_SETTINGSS,\n  value,\n});\n","const SETTINGS = 'pouni-calculation-tester-settings';\nconst HISTORY = 'pouni-calculation-tester-history';\n\n/**\n * local storage class\n */\nclass LocalStorage {\n  /**\n   * save data\n   * @param {string} type `settings` or `history`\n   * @param {object} obj\n   * @returns `true` or `false`\n   */\n  save(type, obj) {\n    let json;\n    try {\n      json = JSON.stringify(obj);\n      type === 'settings' && localStorage.setItem(SETTINGS, json);\n      type === 'history' && localStorage.setItem(HISTORY, json);\n      return true;\n    } catch (e) {\n      console.error(e);\n      return false;\n    }\n  }\n\n  /**\n   * load data\n   * @param {string} type `settings` or `history`\n   * @returns `obj` or `null`\n   */\n  load(type) {\n    let obj;\n    try {\n      type === 'settings' && (obj = JSON.parse(localStorage.getItem(SETTINGS)));\n      type === 'history' && (obj = JSON.parse(localStorage.getItem(HISTORY)));\n    } catch (e) {\n      console.error(e);\n      return null;\n    }\n    return obj;\n  }\n}\n\nexport default LocalStorage;\n","import { fromJS } from 'immutable';\nimport { UPDATE_QUESTION_TYPES, UPDATE_QUESTION_SETTINGSS } from './actions';\n// ls\nimport LocalStorage from '../../plugins/LocalStorage';\nconst ls = new LocalStorage();\n\n// intergated settings\nconst EASY_SETTINGS = fromJS({\n  hhc: 'easy',\n  range: 10,\n  minus: false,\n  bracket: false,\n  dot: false,\n  dotRange: 1,\n});\nconst HARD_SETTINGS = fromJS({\n  hhc: 'hard',\n  range: 100,\n  minus: true,\n  bracket: true,\n  dot: true,\n  dotRange: 2,\n});\n\nconst defaultState = fromJS({\n  questionTypes: {\n    fillBlank: 2, // fill in blanks\n    judge: 4, // judgements\n    select: 3, // selections\n  },\n  questionSettings: EASY_SETTINGS,\n});\n\nconst reducer = (prevState = defaultState, action) => {\n  switch (action.type) {\n    // update question types\n    case UPDATE_QUESTION_TYPES: {\n      const newState = prevState.mergeDeep(fromJS({ questionTypes: action.value }));\n      // prevent all 0\n      const { fillBlank, judge, select } = newState.toJS()['questionTypes'];\n      if (fillBlank === 0 && judge === 0 && select === 0) {\n        return prevState;\n      }\n      ls.save('settings', newState.toJS());\n      return newState;\n    }\n    // update question settings\n    case UPDATE_QUESTION_SETTINGSS: {\n      let newState;\n      if (action.value.hhc === 'easy') {\n        newState = prevState.mergeDeep(fromJS({ questionSettings: EASY_SETTINGS }));\n      } else if (action.value.hhc === 'hard') {\n        newState = prevState.mergeDeep(fromJS({ questionSettings: HARD_SETTINGS }));\n      } else {\n        newState = prevState.mergeDeep(fromJS({ questionSettings: action.value }));\n      }\n      ls.save('settings', newState.toJS());\n      return newState;\n    }\n    // first init\n    default: {\n      const settings = ls.load('settings');\n      if (settings) {\n        // load from storage\n        return fromJS(settings);\n      } else {\n        // init data\n        return prevState;\n      }\n    }\n  }\n};\n\nexport default reducer;\n","// update all questions\nexport const UPDATE_ALL_QUESTIONS = 'UPDATE_ALL_QUESTIONS';\nexport const actionAllQuestions = (value) => {\n  return {\n    type: UPDATE_ALL_QUESTIONS,\n    value,\n  };\n};\n\n// update fill blank questions\nexport const UPDATE_FILL_BLANK_QUESTIONS = 'UPDATE_FILL_BLANK_QUESTIONS';\nexport const actionFillBlankQuestions = (value) => {\n  return {\n    type: UPDATE_FILL_BLANK_QUESTIONS,\n    value,\n  };\n};\n\n// update judge questions\nexport const UPDATE_JUDGE_QUESTIONS = 'UPDATE_JUDGE_QUESTIONS';\nexport const actionJudgeQuestions = (value) => {\n  return {\n    type: UPDATE_JUDGE_QUESTIONS,\n    value,\n  };\n};\n\n// update select questions\nexport const UPDATE_SELECT_QUESTIONS = 'UPDATE_SELECT_QUESTIONS';\nexport const actionSelectQuestions = (value) => {\n  return {\n    type: UPDATE_SELECT_QUESTIONS,\n    value,\n  };\n};\n\n// save and check questions\nexport const SAVE_ALL_QUESTIONS = 'SAVE_ALL_QUESTIONS';\nexport const actionSaveAllQuestion = () => {\n  return {\n    type: SAVE_ALL_QUESTIONS,\n  };\n};\n\n// remove a history\nexport const REMOVE_HISTORY = 'REMOVE_HISTORY';\nexport const actionRemoveHistory = (value) => {\n  return {\n    type: REMOVE_HISTORY,\n    value,\n  };\n};\n\n// load history (from file)\nexport const LOAD_HISTORY = 'LOAD_HISTORY';\nexport const actionLoadHistory = (value) => {\n  return {\n    type: LOAD_HISTORY,\n    value,\n  };\n};\n","import { fromJS } from 'immutable';\nimport {\n  SAVE_ALL_QUESTIONS,\n  UPDATE_ALL_QUESTIONS,\n  UPDATE_FILL_BLANK_QUESTIONS,\n  UPDATE_JUDGE_QUESTIONS,\n  UPDATE_SELECT_QUESTIONS,\n  REMOVE_HISTORY,\n  LOAD_HISTORY,\n} from './actions';\n// dayjs\nimport * as dayjs from 'dayjs';\n// ls\nimport LocalStorage from '../../plugins/LocalStorage';\nconst ls = new LocalStorage();\n\nconst defaultState = fromJS({\n  fillBlankQuestions: [],\n  judgeQuestions: [],\n  selectQuestions: [],\n  history: [],\n});\n\nconst reducer = (prevState = defaultState, action) => {\n  switch (action.type) {\n    // update all questions\n    case UPDATE_ALL_QUESTIONS: {\n      if (action.value) {\n        return prevState\n          .set('fillBlankQuestions', fromJS(action.value.fillBlankQuestions))\n          .set('judgeQuestions', fromJS(action.value.judgeQuestions))\n          .set('selectQuestions', fromJS(action.value.selectQuestions));\n      } else {\n        // reset but not history\n        return prevState\n          .set('fillBlankQuestions', fromJS([]))\n          .set('judgeQuestions', fromJS([]))\n          .set('selectQuestions', fromJS([]));\n      }\n    }\n    // update fill blank questions { index, answer }\n    case UPDATE_FILL_BLANK_QUESTIONS: {\n      const { index, answer } = action.value;\n      const oldList = prevState.get('fillBlankQuestions');\n      const newList = oldList.set(index, oldList.get(index).set('userAns', answer));\n      return prevState.set('fillBlankQuestions', newList);\n    }\n    // update judge questions { index, answer }\n    case UPDATE_JUDGE_QUESTIONS: {\n      const { index, answer } = action.value;\n      const oldList = prevState.get('judgeQuestions');\n      const newList = oldList.set(index, oldList.get(index).set('userAns', answer));\n      return prevState.set('judgeQuestions', newList);\n    }\n    // update select questions { index, answer }\n    case UPDATE_SELECT_QUESTIONS: {\n      const { index, answer } = action.value;\n      const oldList = prevState.get('selectQuestions');\n      const newList = oldList.set(index, oldList.get(index).set('userAns', answer));\n      return prevState.set('selectQuestions', newList);\n    }\n    case SAVE_ALL_QUESTIONS: {\n      const oldList = prevState.get('history');\n      // gen new history, generate a id\n      let maxID = 0;\n      if (oldList.toJS().length > 0) {\n        oldList.forEach((val) => {\n          val.get('historyID') > maxID && (maxID = val.get('historyID'));\n        });\n      } else {\n        maxID = -1;\n      }\n      const newHistory = {\n        historyID: maxID + 1,\n        historyQuestions: {\n          fillBlankQuestions: prevState.get('fillBlankQuestions').toJS(),\n          judgeQuestions: prevState.get('judgeQuestions').toJS(),\n          selectQuestions: prevState.get('selectQuestions').toJS(),\n        },\n        date: dayjs().toJSON(),\n        correctRate: '',\n      };\n      // check answers\n      let allQuestions = 0;\n      let correctQuestions = 0;\n      Object.keys(newHistory.historyQuestions).forEach((key) => {\n        newHistory.historyQuestions[key].forEach((question) => {\n          allQuestions++;\n          question.status = question.ans === question.userAns;\n          question.status && correctQuestions++;\n        });\n      });\n      newHistory.correctRate = ((correctQuestions / allQuestions) * 100).toFixed(0) + '%';\n      // add a history\n      const newList = oldList.push(fromJS(newHistory));\n      ls.save('history', newList.toJS());\n      return prevState.set('history', newList);\n    }\n    // remove a history p: historyID\n    case REMOVE_HISTORY: {\n      const oldList = prevState.get('history').toJS();\n      // find history id's index\n      let index = -1;\n      oldList.forEach((val, i) => {\n        if (action.value === val.historyID) {\n          index = i;\n        }\n      });\n      if (index > 0) {\n        oldList.splice(index, 1);\n        const newList = fromJS(oldList);\n        ls.save('history', newList.toJS());\n        return prevState.set('history', newList);\n      } else {\n        return prevState;\n      }\n    }\n    case LOAD_HISTORY: {\n      const newList = fromJS(action.value);\n      ls.save('history', newList.toJS());\n      return prevState.set('history', newList);\n    }\n    // first init\n    default: {\n      const newState = prevState;\n      const lsHistory = ls.load('history');\n      if (lsHistory) {\n        // load from storage\n        return newState.set('history', fromJS(lsHistory));\n      } else {\n        // init data\n        return newState;\n      }\n    }\n  }\n};\n\nexport default reducer;\n","import { combineReducers } from 'redux-immutable';\n// reducers\nimport { reducer as start } from './start';\nimport { reducer as test } from './test';\n\n// combine reducers\nexport default combineReducers({\n  start,\n  test,\n});\n","import { createStore } from 'redux';\n// preloaded state\nimport reducer from './reducer';\n// apply devtools\nconst enhancer = window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__();\n// create store\nconst store = createStore(reducer, enhancer);\n\nexport default store;\n","export default __webpack_public_path__ + \"static/media/HomeChecked.65863f2e.svg\";","import React from 'react';\nimport { Divider } from 'antd';\nimport { CopyrightOutlined, AntDesignOutlined } from '@ant-design/icons';\n\nfunction Footer(props) {\n  return (\n    <div className=\"footer\">\n      {props.divider && <Divider />}\n      <div className=\"footer-content\">\n        <div>\n          <CopyrightOutlined />\n          <span>&nbsp;Copyright 2020 DSRKafuU | Apache-2.0 License</span>\n        </div>\n        <div>\n          <AntDesignOutlined />\n          <span>&nbsp;NJUPTB18030620 | 2020.10.26</span>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default Footer;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n// antd\nimport { Button, Space } from 'antd';\n// css\nimport HomeChecked from '../../assets/svg/HomeChecked.svg';\nimport './index.scss';\n// comps\nimport Footer from '../../components/Footer';\n\n/**\n * home page\n */\nfunction Home() {\n  return (\n    <div className=\"home\">\n      <div className=\"home-title\">\n        <img src={HomeChecked} className=\"home-title-logo\" alt=\"Title Logo\" />\n        <h1 className=\"home-title-name\">四则运算自测系统</h1>\n        <div className=\"home-title-btns\">\n          <Space size=\"large\">\n            <Link to=\"/app/start\" component={Button} type=\"primary\" size=\"large\">\n              开始\n            </Link>\n            <Link to=\"/app/about\" component={Button} size=\"large\">\n              关于\n            </Link>\n          </Space>\n        </div>\n      </div>\n      <Footer divider={false} />\n    </div>\n  );\n}\n\nexport default Home;\n","import React from 'react';\n// store\nimport { useSelector, useDispatch } from 'react-redux';\nimport { actionQuestionTypes } from '../../../../store/start/actions';\n// antd\nimport { Slider, InputNumber } from 'antd';\n\n/**\n * one question type\n * @param {string} typeText type name\n * @param {string} typeKey type key\n */\nfunction QuestionType(props) {\n  const dispatch = useDispatch();\n  // get data from props\n  const { typeText, typeKey } = props;\n  // get question type numbers\n  const number = useSelector((state) => state.getIn(['start', 'questionTypes', typeKey]));\n  /**\n   * update question types\n   * @param {number} value\n   */\n  const updateQuestionTypes = (value) => {\n    if (isNaN(value)) {\n      return;\n    }\n    // dispatch update\n    return dispatch(actionQuestionTypes({ [typeKey]: value }));\n  };\n\n  return (\n    <div className=\"question-types-item\">\n      <span>{typeText}</span>\n      <Slider min={0} max={10} value={number} onChange={updateQuestionTypes} />\n      <InputNumber min={0} max={10} value={number} onChange={updateQuestionTypes} />\n    </div>\n  );\n}\n\nexport default QuestionType;\n","import React from 'react';\n// store\nimport { useSelector, useDispatch } from 'react-redux';\nimport { actionQuestionSettings } from '../../../../store/start/actions';\n// antd\nimport { Radio, Switch, Select } from 'antd';\n\n// question settings section\nfunction QuestionSettings() {\n  // store dispatch\n  const dispatch = useDispatch();\n  // get settings data\n  const settings = useSelector((state) => state.getIn(['start', 'questionSettings']).toJS());\n  // che if is custom mode\n  const isCustom = settings.hhc === 'custom';\n\n  /**\n   * update hhc\n   * @param {event} e\n   */\n  const updateHhc = (e) => dispatch(actionQuestionSettings({ hhc: e.target.value.split('-')[1] }));\n  /**\n   * update range, parse string to number\n   * @param {event} e\n   */\n  const updateRange = (e) =>\n    dispatch(actionQuestionSettings({ range: +e.target.value.split('-')[1] }));\n  /**\n   * update switches\n   * @param {boolean} checked\n   * @param {string} key\n   */\n  const updateSwitch = (checked, key) => dispatch(actionQuestionSettings({ [key]: checked }));\n  /**\n   * update dot range\n   * @param {string} value\n   */\n  const updateDotRange = (value) =>\n    dispatch(actionQuestionSettings({ dotRange: +value.split('-')[1] }));\n\n  return (\n    <div className=\"question-settings\">\n      <h3>难度与细节设置</h3>\n      <div className=\"question-settings-item\">\n        <span>难度</span>\n        <Radio.Group value={`hdc-${settings.hhc}`} onChange={updateHhc} buttonStyle=\"solid\">\n          <Radio.Button value=\"hdc-easy\">简单</Radio.Button>\n          <Radio.Button value=\"hdc-hard\">困难</Radio.Button>\n          <Radio.Button value=\"hdc-custom\">自定义</Radio.Button>\n        </Radio.Group>\n      </div>\n      <div className=\"question-settings-item\">\n        <span>数值范围「绝对值」</span>\n        <Radio.Group\n          value={`range-${settings.range}`}\n          onChange={updateRange}\n          disabled={!isCustom}\n          buttonStyle=\"solid\"\n        >\n          <Radio.Button value=\"range-10\">10</Radio.Button>\n          <Radio.Button value=\"range-100\">100</Radio.Button>\n          <Radio.Button value=\"range-1000\">1000</Radio.Button>\n        </Radio.Group>\n        <span>以内</span>\n      </div>\n      <div className=\"question-settings-item\">\n        <div>\n          <span>负数</span>\n          <Switch\n            checked={settings.minus}\n            disabled={!isCustom}\n            onChange={(checked) => updateSwitch(checked, 'minus')}\n            checkedChildren=\"开启\"\n            unCheckedChildren=\"关闭\"\n          />\n        </div>\n        <div>\n          <span>括号</span>\n          <Switch\n            checked={settings.bracket}\n            disabled={!isCustom}\n            onChange={(checked) => updateSwitch(checked, 'bracket')}\n            checkedChildren=\"开启\"\n            unCheckedChildren=\"关闭\"\n          />\n        </div>\n      </div>\n      <div className=\"question-settings-item\">\n        <div>\n          <span>小数</span>\n          <Switch\n            checked={settings.dot}\n            disabled={!isCustom}\n            onChange={(checked) => updateSwitch(checked, 'dot')}\n            checkedChildren=\"开启\"\n            unCheckedChildren=\"关闭\"\n          />\n        </div>\n        <div>\n          <span>小数位数</span>\n          <Select disabled={!isCustom} value={`dot-${settings.dotRange}`} onChange={updateDotRange}>\n            <Select.Option value=\"dot-1\">1</Select.Option>\n            <Select.Option value=\"dot-2\">2</Select.Option>\n            <Select.Option value=\"dot-3\">3</Select.Option>\n          </Select>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default QuestionSettings;\n","import React from 'react';\n// antd\nimport { Button, Space } from 'antd';\nimport { RestOutlined, GithubOutlined } from '@ant-design/icons';\n\n// question control question\nfunction QuestionCtrl() {\n  return (\n    <div className=\"question-ctrl\">\n      <h3 className=\"question-ctrl-func\">全局功能</h3>\n      <Space>\n        <Button icon={<RestOutlined />}>清除缓存</Button>\n        <Button\n          icon={<GithubOutlined />}\n          href=\"https://github.com/amzrk2/pouni-calculation-tester\"\n          target=\"_blank\"\n        >\n          GitHub\n        </Button>\n      </Space>\n      <h3 className=\"question-ctrl-notice\">提示</h3>\n      <h4>小数开启</h4>\n      <span>答案请化为与设置的位数相同的精度</span>\n      <h4>负数/小数/数值范围</h4>\n      <span>这些设置项对生成的答案同样有效</span>\n    </div>\n  );\n}\n\nexport default QuestionCtrl;\n","import React from 'react';\n// antd\nimport { Row, Col } from 'antd';\n// css\nimport './index.scss';\n// comps\nimport QuestionType from './components/QuestionType';\nimport QuestionSettings from './components/QuestionSettings';\nimport QuestionCtrl from './components/QuestionCtrl';\n\nfunction Start() {\n  return (\n    <div className=\"start\">\n      <Row gutter={[0, 32]}>\n        <Col xs={24} md={8}>\n          <div className=\"question-types\">\n            <h3>类型与数量调整</h3>\n            <QuestionType typeText=\"填空题\" typeKey=\"fillBlank\" />\n            <QuestionType typeText=\"判断题\" typeKey=\"judge\" />\n            <QuestionType typeText=\"选择题\" typeKey=\"select\" />\n          </div>\n        </Col>\n        <Col xs={24} md={8}>\n          <QuestionSettings />\n        </Col>\n        <Col xs={24} md={8}>\n          <QuestionCtrl />\n        </Col>\n      </Row>\n    </div>\n  );\n}\n\nexport default Start;\n","import { evaluate } from 'mathjs';\n\nconst defaultSettings = {\n  hhc: 'easy',\n  range: 10,\n  minus: false,\n  bracket: false,\n  dot: false,\n  dotRange: 1,\n};\n\nclass ExpGen {\n  /**\n   * @constructor\n   */\n  constructor() {\n    // init settings\n    this._updateSettings(defaultSettings);\n  }\n\n  /**\n   * @private\n   * update generator settings\n   * @param {object} settings\n   */\n  _updateSettings(settings) {\n    this.hhc = settings.hhc;\n    this.range = settings.range;\n    this.minus = settings.minus;\n    this.bracket = settings.bracket;\n    this.dot = settings.dot;\n    this.dotRange = settings.dotRange;\n  }\n\n  /**\n   * @private\n   * get random number\n   * @param {number} min\n   * @param {number} max\n   */\n  _getRandomNumber(min, max) {\n    const range = max - min;\n    const rand = Math.random(); // 0.0-1.0\n    return min + Math.round(rand * range);\n  }\n\n  /**\n   * @private\n   * gen a expression (un processed)\n   */\n  _genExpression() {\n    // gen elements\n    let elementArray = [];\n    // el number\n    const elementNumber = this._getRandomNumber(2, 5);\n    for (let i = 0; i < elementNumber; i++) {\n      elementArray.push(this._getRandomNumber(0, this.range));\n    }\n    // if dot\n    if (this.dot) {\n      elementArray = elementArray.map((val) => {\n        // gen dot number\n        let dotNum = '';\n        for (let i = 0; i < this.dotRange; i++) {\n          dotNum = dotNum.concat(this._getRandomNumber(0, 9));\n        }\n        return `${val}.${dotNum}`;\n      });\n    }\n    // if minus\n    if (this.minus) {\n      elementArray = elementArray.map((val) => {\n        // random minus\n        const rand = Math.random();\n        if (rand - 0.5 > 0) {\n          return val;\n        } else {\n          return `(-${val})`;\n        }\n      });\n    }\n    // cals\n    const calsArray = [];\n    for (let i = 0; i < elementNumber - 1; i++) {\n      calsArray.push([' + ', ' - ', ' * ', ' / '][this._getRandomNumber(0, 3)]);\n    }\n    // gen expression\n    const expression = [];\n    for (let i = 0; i < 2 * elementNumber - 1; i++) {\n      if (i % 2 === 0) {\n        expression.push(elementArray.shift());\n      } else {\n        expression.push(calsArray.shift());\n      }\n    }\n    // return expressiong\n    return expression.join('');\n  }\n\n  /**\n   * insert brackets, element number need to > 3\n   * @param {string} exp\n   */\n  _insertBracket(exp) {\n    const startRand = Math.random() - 0.5;\n    const endRand = Math.random() - 0.5;\n    const elements = exp.split(' ');\n    let startIndex, endIndex;\n    // find first op\n    for (let i = 0; i < elements.length; i++) {\n      if (['+', '-', '*', '/'].includes(elements[i])) {\n        startIndex = i;\n        break;\n      }\n    }\n    // find second op\n    if (startRand > 0) {\n      for (let i = startIndex; i < elements.length; i++) {\n        if (['+', '-', '*', '/'].includes(elements[i])) {\n          startIndex = i;\n          break;\n        }\n      }\n    }\n    // find last first op\n    for (let i = elements.length - 1; i >= 0; i--) {\n      if (['+', '-', '*', '/'].includes(elements[i])) {\n        endIndex = i;\n        break;\n      }\n    }\n    // find last second op\n    if (endRand > 0) {\n      for (let i = endIndex; i >= 0; i--) {\n        if (['+', '-', '*', '/'].includes(elements[i])) {\n          endIndex = i;\n          break;\n        }\n      }\n    }\n    // insert bracket\n    if (endIndex - startIndex !== 4 && endIndex - 1 > startIndex + 1) {\n      elements.splice(startIndex + 1, 0, '(');\n      elements.splice(endIndex - 1, 0, ')');\n      return elements.join(' ');\n    } else {\n      return exp;\n    }\n  }\n\n  /**\n   * @public\n   * generate expressions, returns a promise\n   * @param {number} number\n   * @param {objext} settings\n   */\n  getExpressions(number, settings) {\n    return new Promise((resolve, reject) => {\n      try {\n        // if pssed in settings, update settings\n        if (settings) {\n          const s = { ...defaultSettings, ...settings };\n          this._updateSettings(s);\n        }\n        // gen expressions\n        const exps = [];\n        for (let i = 0; i < number; i++) {\n          let exp = this._genExpression();\n          this.bracket && (exp = this._insertBracket(exp)); // insert bracket\n          let ans = evaluate(exp);\n          // prevent minus and dot\n          let checker;\n          switch (true) {\n            case !this.minus && !this.dot:\n              checker = (ans) =>\n                Number.isFinite(ans) &&\n                !Number.isNaN(ans) &&\n                ans % 1 === 0 &&\n                ans >= 0 &&\n                Math.abs(Math.round(ans)) < settings.range;\n              break;\n            case !this.minus && this.dot:\n              checker = (ans) =>\n                Number.isFinite(ans) &&\n                !Number.isNaN(ans) &&\n                ans >= 0 &&\n                Math.abs(Math.round(ans)) < settings.range;\n              break;\n            case this.minus && !this.dot:\n              checker = (ans) =>\n                Number.isFinite(ans) &&\n                !Number.isNaN(ans) &&\n                ans % 1 === 0 &&\n                Math.abs(Math.round(ans)) < settings.range;\n              break;\n            default:\n              checker = (ans) =>\n                Number.isFinite(ans) &&\n                !Number.isNaN(ans) &&\n                Math.abs(Math.round(ans)) < settings.range;\n          }\n          while (!checker(ans)) {\n            exp = this._genExpression();\n            this.bracket && (exp = this._insertBracket(exp)); // insert bracket\n            ans = evaluate(exp);\n          }\n          // if dot, floor to same dot range\n          if (this.dot) {\n            ans = ans.toFixed(this.dotRange);\n          } else {\n            ans = ans.toString();\n          }\n          // add exp\n          exps.push({ exp, ans });\n        }\n        resolve(exps);\n      } catch (e) {\n        reject(e);\n      }\n    });\n  }\n}\n\nexport default ExpGen;\n","/**\n * @private\n * get random number\n * @param {number} min\n * @param {number} max\n */\nfunction _getRandomNumber(min, max) {\n  const range = max - min;\n  const rand = Math.random(); // 0.0-1.0\n  return min + Math.round(rand * range);\n}\n\n/**\n * generate fill in blank questions\n * @param {array} rawExps\n */\nfunction _genFillBlank(rawExps) {\n  const questions = rawExps.map((val, index) => ({\n    index,\n    exp: val.exp,\n    ans: val.ans,\n    userAns: '',\n    status: null,\n  }));\n  return questions;\n}\n\n/**\n * generate judge questions\n * @param {array} rawExps\n * @param {number} dotRange\n */\nfunction _genJudge(rawExps, dotRange) {\n  const questions = rawExps.map((val, index) => {\n    const newVal = { index, userAns: null, status: null };\n    const rand = _getRandomNumber(0, 1);\n    if (rand === 1) {\n      newVal.exp = `${val.exp} = ${val.ans}`;\n      newVal.ans = true;\n    } else {\n      newVal.exp = `${val.exp} = ${(Number(val.ans) + _getRandomNumber(1, 50)).toFixed(dotRange)}`;\n      newVal.ans = false;\n    }\n    return newVal;\n  });\n  return questions;\n}\n\n/**\n * generate select questions\n * @param {array} rawExps\n * @param {number} dotRange\n */\nfunction _genSelect(rawExps, dotRange) {\n  const questions = rawExps.map((val, index) => {\n    const newVal = { index, exp: val.exp, userAns: null, status: null };\n    const rand = _getRandomNumber(0, 2);\n    const selections = [\n      (Number(val.ans) + _getRandomNumber(1, 50)).toFixed(dotRange),\n      (Number(val.ans) + _getRandomNumber(1, 50)).toFixed(dotRange),\n      (Number(val.ans) + _getRandomNumber(1, 50)).toFixed(dotRange),\n    ];\n    selections[rand] = val.ans;\n    newVal.selections = selections;\n    newVal.ans = rand;\n    return newVal;\n  });\n  return questions;\n}\n\n/**\n * generate questions\n * @param {array} rawExps\n * @param {number} fillBlank\n * @param {number} judge\n * @param {number} select\n * @param {object} settings\n */\nfunction genQuestions(rawExps, fillBlank, judge, select, settings) {\n  let fillBlankExps = [];\n  for (let i = 0; i < fillBlank; i++) {\n    fillBlankExps.push(rawExps.shift());\n  }\n  fillBlankExps = _genFillBlank(fillBlankExps);\n  let judgeExps = [];\n  for (let i = fillBlank; i < fillBlank + judge; i++) {\n    judgeExps.push(rawExps.shift());\n  }\n  judgeExps = _genJudge(judgeExps, settings.dot ? settings.dotRange : 0);\n  let selectExps = [];\n  for (let i = fillBlank + judge; i < fillBlank + judge + select; i++) {\n    selectExps.push(rawExps.shift());\n  }\n  selectExps = _genSelect(selectExps, settings.dot ? settings.dotRange : 0);\n  return {\n    fillBlankQuestions: fillBlankExps,\n    judgeQuestions: judgeExps,\n    selectQuestions: selectExps,\n  };\n}\n\nexport default genQuestions;\n","import React from 'react';\n// store\nimport { useDispatch } from 'react-redux';\nimport {\n  actionFillBlankQuestions,\n  actionJudgeQuestions,\n  actionSelectQuestions,\n} from '../../../../store/test/actions';\n// antd\nimport { Table, Input, Radio } from 'antd';\nimport { CheckOutlined, CloseOutlined } from '@ant-design/icons';\n\n/**\n * gen a test selection\n * @param {object} questions question array\n * @param {object} questionType question type of this array\n */\nfunction TestSection(props) {\n  const dispatch = useDispatch();\n  // get props\n  const { questions, questionType } = props;\n\n  // check question type\n  let columnTitle = '';\n  let columnRender = null;\n  // different render func\n  if (questionType === 'fillBlank') {\n    columnTitle = '填空';\n    columnRender = (record) => (\n      <Input\n        value={record.userAns}\n        onChange={(e) => {\n          const value = e.target.value;\n          dispatch(actionFillBlankQuestions({ index: record.index, answer: value }));\n        }}\n      />\n    );\n  } else if (questionType === 'judge') {\n    columnTitle = '判断';\n    columnRender = (record) => (\n      <Radio.Group\n        className=\"radio-group-judge\"\n        optionType=\"button\"\n        options={[\n          {\n            label: <CheckOutlined />,\n            value: true,\n          },\n          {\n            label: <CloseOutlined />,\n            value: false,\n          },\n        ]}\n        value={record.userAns}\n        onChange={(e) => {\n          const value = e.target.value;\n          dispatch(actionJudgeQuestions({ index: record.index, answer: value }));\n        }}\n      />\n    );\n  } else {\n    columnTitle = '选择';\n    columnRender = (record) => (\n      <Radio.Group\n        options={[\n          { label: record.selections[0], value: 0 },\n          { label: record.selections[1], value: 1 },\n          { label: record.selections[2], value: 2 },\n        ]}\n        value={record.userAns}\n        onChange={(e) => {\n          const value = e.target.value;\n          dispatch(actionSelectQuestions({ index: record.index, answer: value }));\n        }}\n      />\n    );\n  }\n\n  return (\n    <div className=\"test-section\">\n      <Table\n        dataSource={questions}\n        rowKey={(record) => record.index}\n        pagination={false}\n        size=\"middle\"\n        tableLayout=\"fixed\"\n      >\n        <Table.Column title=\"题目\" dataIndex=\"exp\" key=\"exp\" align=\"right\" width=\"60%\" />\n        <Table.Column title={columnTitle} key=\"userAns\" render={columnRender} />\n      </Table>\n    </div>\n  );\n}\n\nexport default TestSection;\n","import React from 'react';\nimport { useHistory } from 'react-router-dom';\n// store\nimport { useDispatch, useSelector } from 'react-redux';\nimport { actionAllQuestions, actionSaveAllQuestion } from '../../../../store/test/actions';\n// antd\nimport { Button, Popconfirm, message } from 'antd';\nimport { RedoOutlined, LoginOutlined } from '@ant-design/icons';\n\n/**\n * test control section\n * @param {object} props\n */\nfunction TestCtrl(props) {\n  const dispatch = useDispatch();\n  const history = useHistory();\n  // get props\n  const { setLoading } = props;\n  // get history\n  const qHistory = useSelector((state) => state.getIn(['test', 'history']).toJS());\n  // gen id jump to\n  let ID;\n  if (qHistory[qHistory.length - 1]) {\n    ID = qHistory[qHistory.length - 1].historyID + 1;\n  } else {\n    ID = 0;\n  }\n\n  return (\n    <div className=\"test-ctrl\">\n      <div className=\"crtl-wrapper\">\n        <Popconfirm\n          placement=\"bottom\"\n          title=\"确定要重新生成题目吗\"\n          onConfirm={() => {\n            setLoading(true);\n            dispatch(actionAllQuestions(null));\n          }}\n          onCancel={() => message.error('已取消重新生成')}\n        >\n          <Button size=\"large\" icon={<RedoOutlined />} danger={true} />\n        </Popconfirm>\n        <Popconfirm\n          placement=\"bottom\"\n          title=\"确定要提交答案吗\"\n          onConfirm={() => {\n            dispatch(actionSaveAllQuestion());\n            message.success('提交成功');\n            history.push(`/app/history/${ID}`);\n          }}\n          onCancel={() => message.error('已取消提交')}\n        >\n          <Button type=\"primary\" size=\"large\" icon={<LoginOutlined />} />\n        </Popconfirm>\n      </div>\n    </div>\n  );\n}\n\nexport default TestCtrl;\n","import React, { useEffect, useState } from 'react';\n// store\nimport { useSelector, useDispatch } from 'react-redux';\nimport { actionAllQuestions } from '../../store/test/actions';\n// antd\nimport { Spin } from 'antd';\n// css\nimport './index.scss';\n// exp gens\nimport ExpGen from '../../plugins/ExpGen';\nimport genQuestions from '../../plugins/genQuestions';\n// components\nimport TestSection from './components/TestSection';\nimport TestCtrl from './components/TestCtrl';\n\n// exp generator\nconst expGen = new ExpGen();\n\nfunction Test() {\n  const dispatch = useDispatch();\n  // get settings data\n  const { fillBlank, judge, select } = useSelector((state) =>\n    state.getIn(['start', 'questionTypes']).toJS()\n  );\n  const questionSettings = useSelector((state) =>\n    state.getIn(['start', 'questionSettings']).toJS()\n  );\n  // get questions\n  const { fillBlankQuestions, judgeQuestions, selectQuestions } = useSelector((state) => {\n    return state.get('test').toJS();\n  });\n  // check question status\n  const questionsAreEmpty = !(\n    fillBlankQuestions.length > 0 ||\n    judgeQuestions.length > 0 ||\n    selectQuestions.length > 0\n  );\n  // question loading animation\n  const [loading, setLoading] = useState(true);\n\n  // update questions when data changed\n  // and if currentQuestions been reset to {}\n  // it will run again to gen new questions\n  useEffect(() => {\n    // if question arrays are empty\n    if (questionsAreEmpty) {\n      (async () => {\n        const rawExps = await expGen.getExpressions(fillBlank + judge + select, questionSettings);\n        const questions = genQuestions(rawExps, fillBlank, judge, select, questionSettings);\n        setTimeout(() => {\n          dispatch(actionAllQuestions(questions));\n          setLoading(false);\n        }, 500);\n      })();\n    } else {\n      setLoading(false);\n    }\n  }, [dispatch, fillBlank, judge, questionSettings, questionsAreEmpty, select]);\n\n  return (\n    <div className=\"test\">\n      <Spin spinning={loading}>\n        <div className=\"test-wrapper\">\n          {fillBlankQuestions.length > 0 && (\n            <TestSection questions={fillBlankQuestions} questionType=\"fillBlank\" />\n          )}\n          {judgeQuestions.length > 0 && (\n            <TestSection questions={judgeQuestions} questionType=\"judge\" />\n          )}\n          {selectQuestions.length > 0 && (\n            <TestSection questions={selectQuestions} questionType=\"select\" />\n          )}\n        </div>\n      </Spin>\n      <TestCtrl setLoading={setLoading} />\n    </div>\n  );\n}\n\nexport default Test;\n","import React from 'react';\nimport { useRouteMatch, Link } from 'react-router-dom';\n// dayjs\nimport * as dayjs from 'dayjs';\n// store\nimport { useSelector, useDispatch } from 'react-redux';\nimport { actionRemoveHistory, actionLoadHistory } from '../../store/test/actions';\n// antd\nimport { Table, Button, Space } from 'antd';\nimport {\n  CloudDownloadOutlined,\n  CloudUploadOutlined,\n  DeleteOutlined,\n  FileDoneOutlined,\n} from '@ant-design/icons';\n// css\nimport './index.scss';\n// file loader and saver\nimport CustomFile from '../../plugins/CustomFile';\nconst customFile = new CustomFile();\n\nfunction HistoryIndex() {\n  const dispatch = useDispatch();\n  // get router match\n  const match = useRouteMatch();\n  // get all history\n  const history = useSelector((state) => {\n    return state.getIn(['test', 'history']).toJS();\n  });\n\n  return (\n    <div className=\"history-index\">\n      <div className=\"history-wrapper\">\n        <Table\n          dataSource={history}\n          rowKey={(record) => record.historyID}\n          pagination={false}\n          size=\"small\"\n          tableLayout=\"fixed\"\n        >\n          <Table.Column\n            title=\"ID\"\n            dataIndex=\"historyID\"\n            key=\"historyID\"\n            align=\"center\"\n            width=\"15%\"\n          />\n          <Table.Column\n            title=\"日期/时间\"\n            key=\"date\"\n            align=\"center\"\n            render={(value) => dayjs(value.date).format('YYYY-MM-DD HH:mm')}\n          />\n          <Table.Column\n            title=\"正确率\"\n            dataIndex=\"correctRate\"\n            key=\"correctRate\"\n            align=\"center\"\n            width=\"20%\"\n          />\n          <Table.Column\n            title=\"控制\"\n            key=\"control\"\n            align=\"center\"\n            render={(value, record, index) => (\n              <Space>\n                <Link\n                  to={`${match.path}/${record.historyID}`}\n                  component={Button}\n                  type=\"primary\"\n                  icon={<FileDoneOutlined />}\n                >\n                  详情\n                </Link>\n                <Button\n                  danger={true}\n                  onClick={() => dispatch(actionRemoveHistory(record.historyID))}\n                  icon={<DeleteOutlined />}\n                >\n                  删除\n                </Button>\n              </Space>\n            )}\n          />\n        </Table>\n      </div>\n      <div className=\"history-ctrl\">\n        <div className=\"crtl-wrapper\">\n          <Button\n            size=\"large\"\n            icon={<CloudUploadOutlined />}\n            onClick={async () => {\n              const obj = await customFile.load();\n              dispatch(actionLoadHistory(obj));\n            }}\n          />\n          <Button\n            type=\"primary\"\n            size=\"large\"\n            icon={<CloudDownloadOutlined />}\n            onClick={() => customFile.save(history)}\n          />\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default HistoryIndex;\n","import * as dayjs from 'dayjs';\n\n/**\n * file class\n */\nclass CustomFile {\n  /**\n   * save the object to file\n   * @param {object} obj\n   */\n  save(obj) {\n    let json;\n    try {\n      json = JSON.stringify(obj);\n      // create file blob\n      const blob = new Blob([json]);\n      // create download dom element\n      const link = document.createElement('a');\n      link.href = URL.createObjectURL(blob);\n      link.download = `${dayjs().toJSON().replace(/:/g, '_')}.json`;\n      // supprot firefox\n      link.style.display = 'none';\n      document.body.appendChild(link);\n      link.click();\n      document.body.removeChild(link);\n    } catch (e) {\n      console.error(e);\n    }\n  }\n\n  /**\n   * async load a json file\n   * @returns a promise\n   */\n  async load() {\n    return new Promise((resolve, reject) => {\n      const input = document.createElement('input');\n      input.type = 'file';\n      input.accept = 'application/json';\n      input.style.display = 'none';\n      input.addEventListener('change', () => {\n        if (input.files.length > 0) {\n          // get the json file\n          const file = input.files[0];\n          if (file.type.includes('json')) {\n            const reader = new FileReader();\n            reader.onload = (e) => {\n              const res = e.target.result;\n              try {\n                const obj = JSON.parse(res);\n                resolve(obj);\n              } catch (e) {\n                reject(e);\n              }\n            };\n            reader.readAsText(file);\n          } else {\n            reject(new Error('wrong file MIME type'));\n          }\n        } else {\n          reject(new Error('no file selected'));\n        }\n      });\n      input.click();\n    });\n  }\n}\n\nexport default CustomFile;\n","import React from 'react';\n// antd\nimport { Button } from 'antd';\nimport { DeleteOutlined, ShareAltOutlined } from '@ant-design/icons';\n// store\nimport { useDispatch } from 'react-redux';\nimport { actionRemoveHistory } from '../../../../store/test/actions';\n\n/**\n * history control section\n * @param {string} historyID\n */\nfunction HistoryCtrl(props) {\n  const dispatch = useDispatch();\n  const { historyID } = props;\n\n  return (\n    <div className=\"history-ctrl\">\n      <div className=\"crtl-wrapper\">\n        <Button\n          size=\"large\"\n          icon={<DeleteOutlined />}\n          danger={true}\n          onClick={() => dispatch(actionRemoveHistory(historyID))}\n        />\n        <Button type=\"primary\" size=\"large\" icon={<ShareAltOutlined />} />\n      </div>\n    </div>\n  );\n}\n\nexport default HistoryCtrl;\n","import React from 'react';\n// antd\nimport { Table } from 'antd';\nimport {\n  CheckCircleTwoTone,\n  CloseCircleTwoTone,\n  CheckOutlined,\n  CloseOutlined,\n} from '@ant-design/icons';\n\n/**\n * status render\n * @param {boolean} status\n */\nconst renderStatus = (status) =>\n  status ? (\n    <CheckCircleTwoTone twoToneColor=\"#52c41a\" />\n  ) : (\n    <CloseCircleTwoTone twoToneColor=\"#ff7875\" />\n  );\n/**\n * answer render\n * fix: prevent null rendered as CloseOutlined\n * @param {boolean} ans\n */\nconst renderAnswer = (ans) => {\n  if (ans === null || ans === undefined) {\n    return '';\n  } else {\n    return ans === false ? <CloseOutlined /> : <CheckOutlined />;\n  }\n};\n\n/**\n * gen a history selection\n * @param {object} questions question array\n * @param {object} questionType question type of this array\n */\nfunction HistorySection(props) {\n  // get props\n  const { questions, questionType } = props;\n\n  // check question type\n  let columnTitle = '';\n  let ansRender = null;\n  let userAnsRender = null;\n  // gen different columns\n  if (questionType === 'fillBlank') {\n    columnTitle = '填空题目';\n    ansRender = 'ans';\n    userAnsRender = 'userAns';\n  } else if (questionType === 'judge') {\n    columnTitle = '判断题目';\n    ansRender = (record) => renderAnswer(record.ans);\n    userAnsRender = (record) => renderAnswer(record.userAns);\n  } else {\n    columnTitle = '选择题目';\n    ansRender = (record) => record.selections[record.ans];\n    userAnsRender = (record) => record.selections[record.userAns];\n  }\n\n  return (\n    <Table\n      dataSource={questions}\n      rowKey={(record) => record.index}\n      pagination={false}\n      size=\"small\"\n      tableLayout=\"fixed\"\n    >\n      <Table.Column title={columnTitle} dataIndex=\"exp\" key=\"exp\" align=\"center\" width=\"50%\" />\n      <Table.Column\n        title=\"正确答案\"\n        key=\"ans\"\n        align=\"center\"\n        dataIndex={typeof ansRender === 'string' ? ansRender : null}\n        render={typeof ansRender === 'function' ? ansRender : null}\n      />\n      <Table.Column\n        title=\"你的答案\"\n        key=\"userAns\"\n        align=\"center\"\n        dataIndex={typeof userAnsRender === 'string' ? userAnsRender : null}\n        render={typeof userAnsRender === 'function' ? userAnsRender : null}\n      />\n      <Table.Column\n        title=\"状态\"\n        key=\"status\"\n        align=\"center\"\n        render={(record) => renderStatus(record.status)}\n        width=\"10%\"\n      />\n    </Table>\n  );\n}\n\nexport default HistorySection;\n","import React from 'react';\nimport { useParams, useHistory } from 'react-router-dom';\n// store\nimport { useSelector } from 'react-redux';\n// css\nimport './index.scss';\n// comps\nimport HistoryCtrl from './components/HistoryCtrl';\nimport HistorySection from './components/HistorySection';\n\nfunction History() {\n  // get current history id\n  const { historyID } = useParams();\n  // get data of this id\n  const allHistory = useSelector((state) => state.getIn(['test', 'history']).toJS());\n  let history;\n  allHistory.forEach((val) => {\n    // fix: different type (string, number)\n    if (val.historyID === +historyID) {\n      history = val;\n    }\n  });\n  // if this index do not exist\n  const h = useHistory();\n  !history && h.push('/app/history');\n  // else get questions\n  let fillBlankQuestions = [];\n  let judgeQuestions = [];\n  let selectQuestions = [];\n  if (history) {\n    fillBlankQuestions = history.historyQuestions.fillBlankQuestions;\n    judgeQuestions = history.historyQuestions.judgeQuestions;\n    selectQuestions = history.historyQuestions.selectQuestions;\n  }\n\n  return (\n    <div className=\"history\">\n      <div className=\"history-wrapper\">\n        {fillBlankQuestions.length > 0 && (\n          <HistorySection questions={fillBlankQuestions} questionType=\"fillBlank\" />\n        )}\n        {judgeQuestions.length > 0 && (\n          <HistorySection questions={judgeQuestions} questionType=\"judge\" />\n        )}\n        {selectQuestions.length > 0 && (\n          <HistorySection questions={selectQuestions} questionType=\"select\" />\n        )}\n      </div>\n      <HistoryCtrl historyID={+historyID} />\n    </div>\n  );\n}\n\nexport default History;\n","import React from 'react';\nimport { Switch, Route, Link, useRouteMatch, withRouter, Redirect } from 'react-router-dom';\n// antd\nimport { Menu } from 'antd';\nimport {\n  SettingOutlined,\n  FormOutlined,\n  HistoryOutlined,\n  InfoCircleOutlined,\n} from '@ant-design/icons';\n// views\nimport Footer from './components/Footer';\nimport Start from './views/Start';\nimport Test from './views/Test';\nimport HistoryIndex from './views/HistoryIndex';\nimport History from './views/History';\n\n// app main page (with history)\nconst App = withRouter(({ history }) => {\n  // router match\n  const match = useRouteMatch();\n  // main menu items\n  const menuItems = [\n    {\n      key: 'start',\n      icon: <SettingOutlined />,\n      text: '开始',\n    },\n    {\n      key: 'test',\n      icon: <FormOutlined />,\n      text: '测试',\n    },\n    {\n      key: 'history',\n      icon: <HistoryOutlined />,\n      text: '历史记录',\n    },\n    {\n      key: 'about',\n      icon: <InfoCircleOutlined />,\n      text: '关于',\n    },\n  ];\n\n  return (\n    <div className=\"app\">\n      <Menu className=\"app-nav\" mode=\"horizontal\" selectedKeys={[history.location.pathname]}>\n        {menuItems.map((val) => (\n          <Menu.Item key={`${match.path}/${val.key}`}>\n            <Link to={`${match.path}/${val.key}`}>\n              {val.icon}\n              <span>{val.text}</span>\n            </Link>\n          </Menu.Item>\n        ))}\n      </Menu>\n      <div className=\"app-content\">\n        <Switch>\n          <Route path={`${match.path}/start`} component={Start} />\n          <Route path={`${match.path}/test`} component={Test} />\n          <Route path={`${match.path}/history/:historyID`} component={History} />\n          <Route path={`${match.path}/history`} component={HistoryIndex} />\n          <Route path={`${match.path}/about`}>关于</Route>\n          <Redirect to=\"/\" />\n        </Switch>\n      </div>\n      <Footer divider={true} />\n    </div>\n  );\n});\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { HashRouter as Router, Switch, Route, Redirect } from 'react-router-dom';\n// css\nimport 'normalize.css';\nimport './index.scss';\n// antd\nimport { ConfigProvider } from 'antd';\nimport zh_CN from 'antd/es/locale/zh_CN';\n// store\nimport { Provider } from 'react-redux';\nimport store from './store';\n// views\nimport Home from './views/Home';\nimport App from './App';\n\nReactDOM.render(\n  <Provider store={store}>\n    <ConfigProvider autoInsertSpaceInButton={false} locale={zh_CN}>\n      <Router>\n        <Switch>\n          <Route path=\"/app\" component={App} />\n          <Route exact path=\"/\" component={Home} />\n          <Redirect to=\"/\" />\n        </Switch>\n      </Router>\n    </ConfigProvider>\n  </Provider>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}