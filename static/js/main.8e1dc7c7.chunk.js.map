{"version":3,"sources":["assets/svg/HomeChecked.svg","components/Footer/index.js","views/Home/index.js","views/Start/store/actypes.js","views/Start/store/actions.js","views/Start/components/QuestionType/index.js","views/Start/components/QuestionSettings/index.js","views/Start/components/QuestionCtrl/index.js","views/Start/index.js","plugins/ExpGen.js","views/Test/index.js","App.js","views/Start/store/reducer.js","store/reducer.js","store/index.js","index.js"],"names":["Footer","props","className","divider","CopyrightOutlined","AntDesignOutlined","Home","src","HomeChecked","alt","size","to","component","type","UPDATE_QUESTION_TYPES","UPDATE_QUESTION_SETTINGS","actionUpdateQuestionSettings","value","QuestionType","dispatch","useDispatch","typeText","typeKey","number","useSelector","state","start","questionTypes","updateQuestionTypes","isNaN","actionUpdateQuestionTypes","min","max","onChange","QuestionSettings","settings","questionSettings","isCustom","hhc","updateSwitch","checked","key","Group","e","target","split","buttonStyle","Button","range","disabled","minus","checkedChildren","unCheckedChildren","bracket","dot","dotRange","Option","QuestionCtrl","icon","RestOutlined","GithubOutlined","href","Start","gutter","xs","md","defaultSettings","expGen","this","_updateSettings","rand","Math","random","round","elementArray","elementNumber","_getRandomNumber","i","push","map","val","dotNum","concat","calsArray","expression","shift","join","exp","startIndex","endIndex","startRand","endRand","elements","length","includes","splice","Promise","resolve","reject","s","exps","_genExpression","_insertBracket","ans","evaluate","checker","Number","isFinite","toFixed","Test","fillBlank","judge","select","expNum","useEffect","a","getExpressions","console","log","App","withRouter","history","match","useRouteMatch","menuItems","SettingOutlined","text","FormOutlined","HistoryOutlined","InfoCircleOutlined","mode","selectedKeys","location","pathname","Item","url","path","EASY_SETTINGS","HARD_SETTINGS","defaultState","reducer","prevState","action","Object","assign","combineReducers","enhancer","window","__REDUX_DEVTOOLS_EXTENSION__","store","createStore","ReactDOM","render","autoInsertSpaceInButton","locale","zh_CN","document","getElementById"],"mappings":"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","file":"static/js/main.8e1dc7c7.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/HomeChecked.65863f2e.svg\";","import React from 'react';\nimport { Divider } from 'antd';\nimport { CopyrightOutlined, AntDesignOutlined } from '@ant-design/icons';\n\nfunction Footer(props) {\n  return (\n    <div className=\"footer\">\n      {props.divider && <Divider />}\n      <div className=\"footer-content\">\n        <div>\n          <CopyrightOutlined />\n          <span>&nbsp;Copyright 2020 DSRKafuU | Apache-2.0 License</span>\n        </div>\n        <div>\n          <AntDesignOutlined />\n          <span>&nbsp;NJUPTB18030620 | 2020.10.26</span>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default Footer;\n","import { Button, Space } from 'antd';\nimport { Link } from 'react-router-dom';\nimport HomeChecked from '../../assets/svg/HomeChecked.svg';\nimport './index.scss';\n\nimport Footer from '../../components/Footer';\n\n/**\n * home page\n */\nfunction Home() {\n  return (\n    <div className=\"home\">\n      <div className=\"home-title\">\n        <img src={HomeChecked} className=\"home-title-logo\" alt=\"Title Logo\" />\n        <h1 className=\"home-title-name\">四则运算自测系统</h1>\n        <div className=\"home-title-btns\">\n          <Space size=\"large\">\n            <Link to=\"/app/start\" component={Button} type=\"primary\" size=\"large\">\n              开始\n            </Link>\n            <Link to=\"/app/about\" component={Button} size=\"large\">\n              关于\n            </Link>\n          </Space>\n        </div>\n      </div>\n      <Footer divider={false} />\n    </div>\n  );\n}\n\nexport default Home;\n","// update question types\nexport const UPDATE_QUESTION_TYPES = 'DSRKAFUU__UPDATE_QUESTION_TYPES';\n// update question settings\nexport const UPDATE_QUESTION_SETTINGS = 'DSRKAFUU__UPDATE_QUESTION_SETTINGS';\n","import { UPDATE_QUESTION_TYPES, UPDATE_QUESTION_SETTINGS } from './actypes';\n\n/**\n * update question types\n */\nexport const actionUpdateQuestionTypes = (value) => {\n  return {\n    type: UPDATE_QUESTION_TYPES,\n    value,\n  };\n};\n\n/**\n * update question settings\n */\nexport const actionUpdateQuestionSettings = (value) => {\n  return {\n    type: UPDATE_QUESTION_SETTINGS,\n    value,\n  };\n};\n","import React from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\n// store\nimport { actionUpdateQuestionTypes } from '../../store/actions';\n// antd\nimport { Slider, InputNumber } from 'antd';\n\n/**\n * one question type\n * @param {string} typeText type name\n * @param {string} typeKey type key\n */\nfunction QuestionType(props) {\n  const dispatch = useDispatch();\n  // get data from props\n  const { typeText, typeKey } = props;\n  // get question type numbers\n  const number = useSelector((state) => state.start.questionTypes[typeKey]);\n  /**\n   * update question types\n   * @param {number} value\n   */\n  const updateQuestionTypes = (value) => {\n    if (isNaN(value)) {\n      return;\n    }\n    // dispatch update\n    return dispatch(actionUpdateQuestionTypes({ [typeKey]: value }));\n  };\n\n  return (\n    <div className=\"question-types-item\">\n      <span>{typeText}</span>\n      <Slider min={0} max={10} value={number} onChange={updateQuestionTypes} />\n      <InputNumber min={0} max={10} value={number} onChange={updateQuestionTypes} />\n    </div>\n  );\n}\n\nexport default QuestionType;\n","import React from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\n// antd\nimport { Radio, Switch, Select } from 'antd';\n// store\nimport { actionUpdateQuestionSettings } from '../../store/actions';\n\nfunction QuestionSettings() {\n  const dispatch = useDispatch();\n  // get settings data\n  const settings = useSelector((state) => state.start.questionSettings);\n  // get custom data\n  const isCustom = settings.hhc === 'custom';\n\n  /**\n   * update hhc\n   * @param {event} e\n   */\n  const updateHdc = (e) =>\n    dispatch(actionUpdateQuestionSettings({ ...settings, hhc: e.target.value.split('-')[1] }));\n  /**\n   * update range, parse string to number\n   * @param {event} e\n   */\n  const updateRange = (e) =>\n    dispatch(actionUpdateQuestionSettings({ ...settings, range: +e.target.value.split('-')[1] }));\n  /**\n   * update switches\n   * @param {boolean} checked\n   * @param {string} key\n   */\n  const updateSwitch = (checked, key) =>\n    dispatch(actionUpdateQuestionSettings({ ...settings, [key]: checked }));\n  /**\n   * update dot range\n   * @param {string} value\n   */\n  const updateDotRange = (value) =>\n    dispatch(actionUpdateQuestionSettings({ ...settings, dotRange: +value.split('-')[1] }));\n\n  return (\n    <div className=\"question-settings\">\n      <h3>难度与细节设置</h3>\n      <div className=\"question-settings-item\">\n        <span>难度</span>\n        <Radio.Group value={`hdc-${settings.hhc}`} onChange={updateHdc} buttonStyle=\"solid\">\n          <Radio.Button value=\"hdc-easy\">简单</Radio.Button>\n          <Radio.Button value=\"hdc-hard\">困难</Radio.Button>\n          <Radio.Button value=\"hdc-custom\">自定义</Radio.Button>\n        </Radio.Group>\n      </div>\n      <div className=\"question-settings-item\">\n        <span>数值范围「绝对值」</span>\n        <Radio.Group\n          value={`range-${settings.range}`}\n          onChange={updateRange}\n          disabled={!isCustom}\n          buttonStyle=\"solid\"\n        >\n          <Radio.Button value=\"range-10\">10</Radio.Button>\n          <Radio.Button value=\"range-100\">100</Radio.Button>\n          <Radio.Button value=\"range-1000\">1000</Radio.Button>\n        </Radio.Group>\n        <span>以内</span>\n      </div>\n      <div className=\"question-settings-item\">\n        <div>\n          <span>负数</span>\n          <Switch\n            checked={settings.minus}\n            disabled={!isCustom}\n            onChange={(checked) => updateSwitch(checked, 'minus')}\n            checkedChildren=\"开启\"\n            unCheckedChildren=\"关闭\"\n          />\n        </div>\n        <div>\n          <span>括号</span>\n          <Switch\n            checked={settings.bracket}\n            disabled={!isCustom}\n            onChange={(checked) => updateSwitch(checked, 'bracket')}\n            checkedChildren=\"开启\"\n            unCheckedChildren=\"关闭\"\n          />\n        </div>\n      </div>\n      <div className=\"question-settings-item\">\n        <div>\n          <span>小数</span>\n          <Switch\n            checked={settings.dot}\n            disabled={!isCustom}\n            onChange={(checked) => updateSwitch(checked, 'dot')}\n            checkedChildren=\"开启\"\n            unCheckedChildren=\"关闭\"\n          />\n        </div>\n        <div>\n          <span>小数位数</span>\n          <Select disabled={!isCustom} value={`dot-${settings.dotRange}`} onChange={updateDotRange}>\n            <Select.Option value=\"dot-1\">1</Select.Option>\n            <Select.Option value=\"dot-2\">2</Select.Option>\n            <Select.Option value=\"dot-3\">3</Select.Option>\n          </Select>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default QuestionSettings;\n","import React from 'react';\n// antd\nimport { Button, Space } from 'antd';\nimport { RestOutlined, GithubOutlined } from '@ant-design/icons';\n\nfunction QuestionCtrl() {\n  return (\n    <div className=\"question-ctrl\">\n      <h3>全局功能</h3>\n      <Space>\n        <Button icon={<RestOutlined />}>清除缓存</Button>\n        <Button\n          icon={<GithubOutlined />}\n          href=\"https://github.com/amzrk2/pouni-calculation-tester\"\n          target=\"_blank\"\n        >\n          GitHub\n        </Button>\n      </Space>\n      <h3 className=\"question-ctrl-notice\">提示</h3>\n      <h4>小数开启</h4>\n      <span>答案请化为与设置的位数相同的精度</span>\n      <h4>负数和小数关闭</h4>\n      <span>答案也将不会出现负数和小数</span>\n    </div>\n  );\n}\n\nexport default QuestionCtrl;\n","import React from 'react';\n// antd\nimport { Row, Col } from 'antd';\n// css\nimport './index.scss';\n// components\nimport QuestionType from './components/QuestionType';\nimport QuestionSettings from './components/QuestionSettings';\nimport QuestionCtrl from './components/QuestionCtrl';\n\nfunction Start() {\n  return (\n    <div className=\"start\">\n      <Row gutter={[0, 32]}>\n        <Col xs={24} md={8}>\n          <div className=\"question-types\">\n            <h3>类型与数量调整</h3>\n            <QuestionType typeText=\"填空题\" typeKey=\"fillBlank\" />\n            <QuestionType typeText=\"判断题\" typeKey=\"judge\" />\n            <QuestionType typeText=\"选择题\" typeKey=\"select\" />\n          </div>\n        </Col>\n        <Col xs={24} md={8}>\n          <QuestionSettings />\n        </Col>\n        <Col xs={24} md={8}>\n          <QuestionCtrl />\n        </Col>\n      </Row>\n    </div>\n  );\n}\n\nexport default Start;\n","import { evaluate } from 'mathjs';\n\nconst defaultSettings = {\n  hhc: 'easy',\n  range: 10,\n  minus: false,\n  bracket: false,\n  dot: false,\n  dotRange: 1,\n};\n\nclass ExpGen {\n  /**\n   * @constructor\n   */\n  constructor() {\n    // init settings\n    this._updateSettings(defaultSettings);\n  }\n\n  /**\n   * @private\n   * update generator settings\n   * @param {object} settings\n   */\n  _updateSettings(settings) {\n    this.hhc = settings.hhc;\n    this.range = settings.range;\n    this.minus = settings.minus;\n    this.bracket = settings.bracket;\n    this.dot = settings.dot;\n    this.dotRange = settings.dotRange;\n  }\n\n  /**\n   * @private\n   * get random number\n   * @param {number} min\n   * @param {number} max\n   */\n  _getRandomNumber(min, max) {\n    const range = max - min;\n    const rand = Math.random(); // 0.0-1.0\n    return min + Math.round(rand * range);\n  }\n\n  /**\n   * @private\n   * gen a expression (un processed)\n   */\n  _genExpression() {\n    // gen elements\n    let elementArray = [];\n    // el number\n    const elementNumber = this._getRandomNumber(2, 5);\n    for (let i = 0; i < elementNumber; i++) {\n      elementArray.push(this._getRandomNumber(0, this.range));\n    }\n    // if dot\n    if (this.dot) {\n      elementArray = elementArray.map((val) => {\n        // gen dot number\n        let dotNum = '';\n        for (let i = 0; i < this.dotRange; i++) {\n          dotNum = dotNum.concat(this._getRandomNumber(0, 9));\n        }\n        return `${val}.${dotNum}`;\n      });\n    }\n    // if minus\n    if (this.minus) {\n      elementArray = elementArray.map((val) => {\n        // random minus\n        const rand = Math.random();\n        if (rand - 0.5 > 0) {\n          return val;\n        } else {\n          return `(-${val})`;\n        }\n      });\n    }\n    // cals\n    const calsArray = [];\n    for (let i = 0; i < elementNumber - 1; i++) {\n      calsArray.push([' + ', ' - ', ' * ', ' / '][this._getRandomNumber(0, 3)]);\n    }\n    // gen expression\n    const expression = [];\n    for (let i = 0; i < 2 * elementNumber - 1; i++) {\n      if (i % 2 === 0) {\n        expression.push(elementArray.shift());\n      } else {\n        expression.push(calsArray.shift());\n      }\n    }\n    // return expressiong\n    return expression.join('');\n  }\n\n  /**\n   * insert brackets, element number need to > 3\n   * @param {string} exp\n   */\n  _insertBracket(exp) {\n    const startRand = Math.random() - 0.5;\n    const endRand = Math.random() - 0.5;\n    const elements = exp.split(' ');\n    let startIndex, endIndex;\n    // find first op\n    for (let i = 0; i < elements.length; i++) {\n      if (['+', '-', '*', '/'].includes(elements[i])) {\n        startIndex = i;\n        break;\n      }\n    }\n    // find second op\n    if (startRand > 0) {\n      for (let i = startIndex; i < elements.length; i++) {\n        if (['+', '-', '*', '/'].includes(elements[i])) {\n          startIndex = i;\n          break;\n        }\n      }\n    }\n    // find last first op\n    for (let i = elements.length - 1; i >= 0; i--) {\n      if (['+', '-', '*', '/'].includes(elements[i])) {\n        endIndex = i;\n        break;\n      }\n    }\n    // find last second op\n    if (endRand > 0) {\n      for (let i = endIndex; i >= 0; i--) {\n        if (['+', '-', '*', '/'].includes(elements[i])) {\n          endIndex = i;\n          break;\n        }\n      }\n    }\n    // insert bracket\n    if (endIndex - startIndex !== 4 && endIndex - 1 > startIndex + 1) {\n      elements.splice(startIndex + 1, 0, '(');\n      elements.splice(endIndex - 1, 0, ')');\n      return elements.join(' ');\n    } else {\n      return exp;\n    }\n  }\n\n  /**\n   * @public\n   * generate expressions, returns a promise\n   * @param {number} number\n   * @param {objext} settings\n   */\n  getExpressions(number, settings) {\n    return new Promise((resolve, reject) => {\n      try {\n        // if pssed in settings, update settings\n        if (settings) {\n          const s = { ...defaultSettings, ...settings };\n          this._updateSettings(s);\n        }\n        // gen expressions\n        const exps = [];\n        for (let i = 0; i < number; i++) {\n          let exp = this._genExpression();\n          this.bracket && (exp = this._insertBracket(exp)); // insert bracket\n          let ans = evaluate(exp);\n          // prevent minus and dot\n          let checker;\n          switch (true) {\n            case !this.minus && !this.dot:\n              checker = (ans) =>\n                Number.isFinite(ans) && !Number.isNaN(ans) && ans % 1 === 0 && ans >= 0;\n              break;\n            case !this.minus && this.dot:\n              checker = (ans) => Number.isFinite(ans) && !Number.isNaN(ans) && ans >= 0;\n              break;\n            case this.minus && !this.dot:\n              checker = (ans) => Number.isFinite(ans) && !Number.isNaN(ans) && ans % 1 === 0;\n              break;\n            default:\n              checker = (ans) => Number.isFinite(ans) && !Number.isNaN(ans);\n          }\n          while (!checker(ans)) {\n            exp = this._genExpression();\n            this.bracket && (exp = this._insertBracket(exp)); // insert bracket\n            ans = evaluate(exp);\n          }\n          // if dot, floor to same dot range\n          this.dot && (ans = ans.toFixed(this.dotRange));\n          // add exp\n          exps.push({ exp, ans });\n        }\n        resolve(exps);\n      } catch (e) {\n        reject(e);\n      }\n    });\n  }\n}\n\nexport default ExpGen;\n","import React, { useEffect } from 'react';\nimport { useSelector } from 'react-redux';\n// css\nimport './index.scss';\n// exp gens\nimport ExpGen from '../../plugins/ExpGen';\n\nconst expGen = new ExpGen();\n\nfunction Test() {\n  // get settings data\n  const { fillBlank, judge, select } = useSelector((state) => state.start.questionTypes);\n  const questionSettings = useSelector((state) => state.start.questionSettings);\n  // exp um\n  const expNum = fillBlank + judge + select;\n\n  useEffect(() => {\n    (async () => {\n      const exps = await expGen.getExpressions(expNum, questionSettings);\n      console.log(exps);\n    })();\n  });\n\n  return <div className=\"test\"></div>;\n}\n\nexport default Test;\n","// deps\nimport React from 'react';\nimport { Switch, Route, Link, useRouteMatch, withRouter, Redirect } from 'react-router-dom';\nimport { Menu } from 'antd';\nimport {\n  SettingOutlined,\n  FormOutlined,\n  HistoryOutlined,\n  InfoCircleOutlined,\n} from '@ant-design/icons';\n// views\nimport Footer from './components/Footer';\nimport Start from './views/Start';\nimport Test from './views/Test';\n\n/**\n * app main page\n */\nconst App = withRouter(({ history }) => {\n  // router match\n  const match = useRouteMatch();\n  // menu items\n  const menuItems = [\n    {\n      key: 'start',\n      icon: <SettingOutlined />,\n      text: '开始',\n    },\n    {\n      key: 'test',\n      icon: <FormOutlined />,\n      text: '测试',\n    },\n    {\n      key: 'history',\n      icon: <HistoryOutlined />,\n      text: '历史记录',\n    },\n    {\n      key: 'about',\n      icon: <InfoCircleOutlined />,\n      text: '关于',\n    },\n  ];\n\n  return (\n    <div className=\"app\">\n      <Menu className=\"app-nav\" mode=\"horizontal\" selectedKeys={[history.location.pathname]}>\n        {menuItems.map((val) => (\n          <Menu.Item key={`${match.url}/${val.key}`}>\n            <Link to={`${match.url}/${val.key}`}>\n              {val.icon}\n              <span>{val.text}</span>\n            </Link>\n          </Menu.Item>\n        ))}\n      </Menu>\n      <div className=\"app-content\">\n        <Switch>\n          <Route path={`${match.path}/start`} component={Start} />\n          <Route path={`${match.path}/test`} component={Test}></Route>\n          <Route path={`${match.path}/history`}>历史记录</Route>\n          <Route path={`${match.path}/about`}>关于</Route>\n          <Redirect to=\"/\" />\n        </Switch>\n      </div>\n      <Footer divider={true} />\n    </div>\n  );\n});\n\nexport default App;\n","import { UPDATE_QUESTION_TYPES, UPDATE_QUESTION_SETTINGS } from './actypes';\n\n// intergated settings\nconst EASY_SETTINGS = {\n  hhc: 'easy',\n  range: 10,\n  minus: false,\n  bracket: false,\n  dot: false,\n  dotRange: 1,\n};\nconst HARD_SETTINGS = {\n  hhc: 'hard',\n  range: 100,\n  minus: true,\n  bracket: true,\n  dot: true,\n  dotRange: 2,\n};\n\nconst defaultState = {\n  questionTypes: {\n    fillBlank: 5, // fill in blanks\n    judge: 5, // judgements\n    select: 5, // selections\n  },\n  questionSettings: EASY_SETTINGS,\n};\n\nconst reducer = (prevState = defaultState, action) => {\n  switch (action.type) {\n    // update question types\n    case UPDATE_QUESTION_TYPES:\n      return Object.assign({}, prevState, {\n        // data from `action` only has one key, need to merge with `prevState`\n        questionTypes: { ...prevState.questionTypes, ...action.value },\n      });\n    // update question settings\n    case UPDATE_QUESTION_SETTINGS:\n      if (action.value.hhc === 'easy') {\n        return Object.assign({}, prevState, {\n          questionSettings: EASY_SETTINGS,\n        });\n      } else if (action.value.hhc === 'hard') {\n        return Object.assign({}, prevState, {\n          questionSettings: HARD_SETTINGS,\n        });\n      }\n      return Object.assign({}, prevState, {\n        // always full object, no need to merge\n        questionSettings: action.value,\n      });\n    // init\n    default:\n      return prevState;\n  }\n};\n\nexport default reducer;\n","import { combineReducers } from 'redux';\n// reducers\nimport { reducer as start } from '../views/Start/store';\n\n// combine reducers\nexport default combineReducers({\n  start,\n});\n","import { createStore } from 'redux';\n// preloaded state\nimport reducer from './reducer';\n// apply devtools\nconst enhancer = window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__();\n// create store\nconst store = createStore(reducer, enhancer);\n\nexport default store;\n","// deps\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\nimport { Provider } from 'react-redux';\n// css\nimport 'normalize.css';\nimport './index.scss';\n// antd config provider\nimport { ConfigProvider } from 'antd';\nimport zh_CN from 'antd/es/locale/zh_CN';\n// views\nimport Home from './views/Home';\nimport App from './App';\n// store\nimport store from './store';\n\nReactDOM.render(\n  <Provider store={store}>\n    <ConfigProvider autoInsertSpaceInButton={false} locale={zh_CN}>\n      <Router>\n        <Switch>\n          <Route path=\"/app\" component={App} />\n          <Route path=\"/\" component={Home} />\n        </Switch>\n      </Router>\n    </ConfigProvider>\n  </Provider>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}