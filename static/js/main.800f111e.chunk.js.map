{"version":3,"sources":["assets/svg/HomeChecked.svg","components/Footer/index.js","views/Home/index.js","views/Start/store/actions.js","views/Start/components/QuestionType/index.js","views/Start/components/QuestionSettings/index.js","views/Start/components/QuestionCtrl/index.js","views/Start/index.js","plugins/ExpGen.js","plugins/genQuestions.js","views/Test/store/actions.js","views/Test/index.js","App.js","views/Start/store/reducer.js","views/Test/store/reducer.js","store/reducer.js","store/index.js","index.js"],"names":["Footer","props","className","divider","CopyrightOutlined","AntDesignOutlined","Home","src","HomeChecked","alt","size","to","component","type","UPDATE_QUESTION_TYPES","UPDATE_QUESTION_SETTINGSS","actionQuestionSettings","value","QuestionType","dispatch","useDispatch","typeText","typeKey","number","useSelector","state","getIn","updateQuestionTypes","isNaN","actionQuestionTypes","min","max","onChange","QuestionSettings","settings","toJS","isCustom","hhc","updateSwitch","checked","key","Group","e","target","split","buttonStyle","Button","range","disabled","minus","checkedChildren","unCheckedChildren","bracket","dot","dotRange","Option","QuestionCtrl","icon","RestOutlined","GithubOutlined","href","Start","gutter","xs","md","defaultSettings","_getRandomNumber","rand","Math","random","round","genQuestions","rawExps","fillBlank","judge","select","fillBlankExps","i","push","shift","map","val","index","exp","ans","userAns","status","_genFillBlank","judgeExps","newVal","Number","toFixed","_genJudge","selectExps","fillBlankQuestions","judgeQuestions","selectQuestions","selections","_genSelect","UPDATE_ALL_QUESTIONS","UPDATE_FILL_BLANK_QUESTIONS","UPDATE_JUDGE_QUESTIONS","UPDATE_SELECT_QUESTIONS","expGen","this","_updateSettings","elementArray","elementNumber","dotNum","concat","calsArray","expression","join","startIndex","endIndex","startRand","endRand","elements","length","includes","splice","Promise","resolve","reject","s","exps","_genExpression","_insertBracket","evaluate","checker","isFinite","toString","Test","questionSettings","get","questionsAreEmpty","useEffect","a","getExpressions","questions","dataSource","rowKey","record","pagination","tableLayout","Column","title","dataIndex","align","render","actionFillBlankQuestions","answer","optionType","options","label","actionJudgeQuestions","actionSelectQuestions","App","withRouter","history","match","useRouteMatch","menuItems","SettingOutlined","text","FormOutlined","HistoryOutlined","InfoCircleOutlined","mode","selectedKeys","location","pathname","Item","url","path","EASY_SETTINGS","fromJS","HARD_SETTINGS","defaultState","questionTypes","reducer","prevState","action","mergeDeep","oldList","newList","set","combineReducers","start","test","enhancer","window","__REDUX_DEVTOOLS_EXTENSION__","store","createStore","ReactDOM","autoInsertSpaceInButton","locale","zh_CN","document","getElementById"],"mappings":"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","file":"static/js/main.800f111e.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/HomeChecked.65863f2e.svg\";","import React from 'react';\nimport { Divider } from 'antd';\nimport { CopyrightOutlined, AntDesignOutlined } from '@ant-design/icons';\n\nfunction Footer(props) {\n  return (\n    <div className=\"footer\">\n      {props.divider && <Divider />}\n      <div className=\"footer-content\">\n        <div>\n          <CopyrightOutlined />\n          <span>&nbsp;Copyright 2020 DSRKafuU | Apache-2.0 License</span>\n        </div>\n        <div>\n          <AntDesignOutlined />\n          <span>&nbsp;NJUPTB18030620 | 2020.10.26</span>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default Footer;\n","import { Button, Space } from 'antd';\nimport { Link } from 'react-router-dom';\nimport HomeChecked from '../../assets/svg/HomeChecked.svg';\nimport './index.scss';\n\nimport Footer from '../../components/Footer';\n\n/**\n * home page\n */\nfunction Home() {\n  return (\n    <div className=\"home\">\n      <div className=\"home-title\">\n        <img src={HomeChecked} className=\"home-title-logo\" alt=\"Title Logo\" />\n        <h1 className=\"home-title-name\">四则运算自测系统</h1>\n        <div className=\"home-title-btns\">\n          <Space size=\"large\">\n            <Link to=\"/app/start\" component={Button} type=\"primary\" size=\"large\">\n              开始\n            </Link>\n            <Link to=\"/app/about\" component={Button} size=\"large\">\n              关于\n            </Link>\n          </Space>\n        </div>\n      </div>\n      <Footer divider={false} />\n    </div>\n  );\n}\n\nexport default Home;\n","// update question types\nexport const UPDATE_QUESTION_TYPES = 'UPDATE_QUESTION_TYPES';\nexport const actionQuestionTypes = (value) => ({\n  type: UPDATE_QUESTION_TYPES,\n  value,\n});\n\n// update question settings\nexport const UPDATE_QUESTION_SETTINGSS = 'UPDATE_QUESTION_SETTINGSS';\nexport const actionQuestionSettings = (value) => ({\n  type: UPDATE_QUESTION_SETTINGSS,\n  value,\n});\n","import React from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\n// store\nimport { actionQuestionTypes } from '../../store/actions';\n// antd\nimport { Slider, InputNumber } from 'antd';\n\n/**\n * one question type\n * @param {string} typeText type name\n * @param {string} typeKey type key\n */\nfunction QuestionType(props) {\n  const dispatch = useDispatch();\n  // get data from props\n  const { typeText, typeKey } = props;\n  // get question type numbers\n  const number = useSelector((state) => state.getIn(['start', 'questionTypes', typeKey]));\n  /**\n   * update question types\n   * @param {number} value\n   */\n  const updateQuestionTypes = (value) => {\n    if (isNaN(value)) {\n      return;\n    }\n    // dispatch update\n    return dispatch(actionQuestionTypes({ [typeKey]: value }));\n  };\n\n  return (\n    <div className=\"question-types-item\">\n      <span>{typeText}</span>\n      <Slider min={0} max={10} value={number} onChange={updateQuestionTypes} />\n      <InputNumber min={0} max={10} value={number} onChange={updateQuestionTypes} />\n    </div>\n  );\n}\n\nexport default QuestionType;\n","import React from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\n// antd\nimport { Radio, Switch, Select } from 'antd';\n// store\nimport { actionQuestionSettings } from '../../store/actions';\n\nfunction QuestionSettings() {\n  const dispatch = useDispatch();\n  // get settings data\n  const settings = useSelector((state) => state.getIn(['start', 'questionSettings']).toJS());\n  // get custom data\n  const isCustom = settings.hhc === 'custom';\n  /**\n   * update hhc\n   * @param {event} e\n   */\n  const updateHhc = (e) => dispatch(actionQuestionSettings({ hhc: e.target.value.split('-')[1] }));\n  /**\n   * update range, parse string to number\n   * @param {event} e\n   */\n  const updateRange = (e) =>\n    dispatch(actionQuestionSettings({ range: +e.target.value.split('-')[1] }));\n  /**\n   * update switches\n   * @param {boolean} checked\n   * @param {string} key\n   */\n  const updateSwitch = (checked, key) => dispatch(actionQuestionSettings({ [key]: checked }));\n  /**\n   * update dot range\n   * @param {string} value\n   */\n  const updateDotRange = (value) =>\n    dispatch(actionQuestionSettings({ dotRange: +value.split('-')[1] }));\n\n  return (\n    <div className=\"question-settings\">\n      <h3>难度与细节设置</h3>\n      <div className=\"question-settings-item\">\n        <span>难度</span>\n        <Radio.Group value={`hdc-${settings.hhc}`} onChange={updateHhc} buttonStyle=\"solid\">\n          <Radio.Button value=\"hdc-easy\">简单</Radio.Button>\n          <Radio.Button value=\"hdc-hard\">困难</Radio.Button>\n          <Radio.Button value=\"hdc-custom\">自定义</Radio.Button>\n        </Radio.Group>\n      </div>\n      <div className=\"question-settings-item\">\n        <span>数值范围「绝对值」</span>\n        <Radio.Group\n          value={`range-${settings.range}`}\n          onChange={updateRange}\n          disabled={!isCustom}\n          buttonStyle=\"solid\"\n        >\n          <Radio.Button value=\"range-10\">10</Radio.Button>\n          <Radio.Button value=\"range-100\">100</Radio.Button>\n          <Radio.Button value=\"range-1000\">1000</Radio.Button>\n        </Radio.Group>\n        <span>以内</span>\n      </div>\n      <div className=\"question-settings-item\">\n        <div>\n          <span>负数</span>\n          <Switch\n            checked={settings.minus}\n            disabled={!isCustom}\n            onChange={(checked) => updateSwitch(checked, 'minus')}\n            checkedChildren=\"开启\"\n            unCheckedChildren=\"关闭\"\n          />\n        </div>\n        <div>\n          <span>括号</span>\n          <Switch\n            checked={settings.bracket}\n            disabled={!isCustom}\n            onChange={(checked) => updateSwitch(checked, 'bracket')}\n            checkedChildren=\"开启\"\n            unCheckedChildren=\"关闭\"\n          />\n        </div>\n      </div>\n      <div className=\"question-settings-item\">\n        <div>\n          <span>小数</span>\n          <Switch\n            checked={settings.dot}\n            disabled={!isCustom}\n            onChange={(checked) => updateSwitch(checked, 'dot')}\n            checkedChildren=\"开启\"\n            unCheckedChildren=\"关闭\"\n          />\n        </div>\n        <div>\n          <span>小数位数</span>\n          <Select disabled={!isCustom} value={`dot-${settings.dotRange}`} onChange={updateDotRange}>\n            <Select.Option value=\"dot-1\">1</Select.Option>\n            <Select.Option value=\"dot-2\">2</Select.Option>\n            <Select.Option value=\"dot-3\">3</Select.Option>\n          </Select>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default QuestionSettings;\n","import React from 'react';\n// antd\nimport { Button, Space } from 'antd';\nimport { RestOutlined, GithubOutlined } from '@ant-design/icons';\n\nfunction QuestionCtrl() {\n  return (\n    <div className=\"question-ctrl\">\n      <h3 className=\"question-ctrl-func\">全局功能</h3>\n      <Space>\n        <Button icon={<RestOutlined />}>清除缓存</Button>\n        <Button\n          icon={<GithubOutlined />}\n          href=\"https://github.com/amzrk2/pouni-calculation-tester\"\n          target=\"_blank\"\n        >\n          GitHub\n        </Button>\n      </Space>\n      <h3 className=\"question-ctrl-notice\">提示</h3>\n      <h4>小数开启</h4>\n      <span>答案请化为与设置的位数相同的精度</span>\n      <h4>负数和小数关闭</h4>\n      <span>答案也将不会出现负数和小数</span>\n    </div>\n  );\n}\n\nexport default QuestionCtrl;\n","import React from 'react';\n// antd\nimport { Row, Col } from 'antd';\n// css\nimport './index.scss';\n// components\nimport QuestionType from './components/QuestionType';\nimport QuestionSettings from './components/QuestionSettings';\nimport QuestionCtrl from './components/QuestionCtrl';\n\nfunction Start() {\n  return (\n    <div className=\"start\">\n      <Row gutter={[0, 32]}>\n        <Col xs={24} md={8}>\n          <div className=\"question-types\">\n            <h3>类型与数量调整</h3>\n            <QuestionType typeText=\"填空题\" typeKey=\"fillBlank\" />\n            <QuestionType typeText=\"判断题\" typeKey=\"judge\" />\n            <QuestionType typeText=\"选择题\" typeKey=\"select\" />\n          </div>\n        </Col>\n        <Col xs={24} md={8}>\n          <QuestionSettings />\n        </Col>\n        <Col xs={24} md={8}>\n          <QuestionCtrl />\n        </Col>\n      </Row>\n    </div>\n  );\n}\n\nexport default Start;\n","import { evaluate } from 'mathjs';\n\nconst defaultSettings = {\n  hhc: 'easy',\n  range: 10,\n  minus: false,\n  bracket: false,\n  dot: false,\n  dotRange: 1,\n};\n\nclass ExpGen {\n  /**\n   * @constructor\n   */\n  constructor() {\n    // init settings\n    this._updateSettings(defaultSettings);\n  }\n\n  /**\n   * @private\n   * update generator settings\n   * @param {object} settings\n   */\n  _updateSettings(settings) {\n    this.hhc = settings.hhc;\n    this.range = settings.range;\n    this.minus = settings.minus;\n    this.bracket = settings.bracket;\n    this.dot = settings.dot;\n    this.dotRange = settings.dotRange;\n  }\n\n  /**\n   * @private\n   * get random number\n   * @param {number} min\n   * @param {number} max\n   */\n  _getRandomNumber(min, max) {\n    const range = max - min;\n    const rand = Math.random(); // 0.0-1.0\n    return min + Math.round(rand * range);\n  }\n\n  /**\n   * @private\n   * gen a expression (un processed)\n   */\n  _genExpression() {\n    // gen elements\n    let elementArray = [];\n    // el number\n    const elementNumber = this._getRandomNumber(2, 5);\n    for (let i = 0; i < elementNumber; i++) {\n      elementArray.push(this._getRandomNumber(0, this.range));\n    }\n    // if dot\n    if (this.dot) {\n      elementArray = elementArray.map((val) => {\n        // gen dot number\n        let dotNum = '';\n        for (let i = 0; i < this.dotRange; i++) {\n          dotNum = dotNum.concat(this._getRandomNumber(0, 9));\n        }\n        return `${val}.${dotNum}`;\n      });\n    }\n    // if minus\n    if (this.minus) {\n      elementArray = elementArray.map((val) => {\n        // random minus\n        const rand = Math.random();\n        if (rand - 0.5 > 0) {\n          return val;\n        } else {\n          return `(-${val})`;\n        }\n      });\n    }\n    // cals\n    const calsArray = [];\n    for (let i = 0; i < elementNumber - 1; i++) {\n      calsArray.push([' + ', ' - ', ' * ', ' / '][this._getRandomNumber(0, 3)]);\n    }\n    // gen expression\n    const expression = [];\n    for (let i = 0; i < 2 * elementNumber - 1; i++) {\n      if (i % 2 === 0) {\n        expression.push(elementArray.shift());\n      } else {\n        expression.push(calsArray.shift());\n      }\n    }\n    // return expressiong\n    return expression.join('');\n  }\n\n  /**\n   * insert brackets, element number need to > 3\n   * @param {string} exp\n   */\n  _insertBracket(exp) {\n    const startRand = Math.random() - 0.5;\n    const endRand = Math.random() - 0.5;\n    const elements = exp.split(' ');\n    let startIndex, endIndex;\n    // find first op\n    for (let i = 0; i < elements.length; i++) {\n      if (['+', '-', '*', '/'].includes(elements[i])) {\n        startIndex = i;\n        break;\n      }\n    }\n    // find second op\n    if (startRand > 0) {\n      for (let i = startIndex; i < elements.length; i++) {\n        if (['+', '-', '*', '/'].includes(elements[i])) {\n          startIndex = i;\n          break;\n        }\n      }\n    }\n    // find last first op\n    for (let i = elements.length - 1; i >= 0; i--) {\n      if (['+', '-', '*', '/'].includes(elements[i])) {\n        endIndex = i;\n        break;\n      }\n    }\n    // find last second op\n    if (endRand > 0) {\n      for (let i = endIndex; i >= 0; i--) {\n        if (['+', '-', '*', '/'].includes(elements[i])) {\n          endIndex = i;\n          break;\n        }\n      }\n    }\n    // insert bracket\n    if (endIndex - startIndex !== 4 && endIndex - 1 > startIndex + 1) {\n      elements.splice(startIndex + 1, 0, '(');\n      elements.splice(endIndex - 1, 0, ')');\n      return elements.join(' ');\n    } else {\n      return exp;\n    }\n  }\n\n  /**\n   * @public\n   * generate expressions, returns a promise\n   * @param {number} number\n   * @param {objext} settings\n   */\n  getExpressions(number, settings) {\n    return new Promise((resolve, reject) => {\n      try {\n        // if pssed in settings, update settings\n        if (settings) {\n          const s = { ...defaultSettings, ...settings };\n          this._updateSettings(s);\n        }\n        // gen expressions\n        const exps = [];\n        for (let i = 0; i < number; i++) {\n          let exp = this._genExpression();\n          this.bracket && (exp = this._insertBracket(exp)); // insert bracket\n          let ans = evaluate(exp);\n          // prevent minus and dot\n          let checker;\n          switch (true) {\n            case !this.minus && !this.dot:\n              checker = (ans) =>\n                Number.isFinite(ans) && !Number.isNaN(ans) && ans % 1 === 0 && ans >= 0;\n              break;\n            case !this.minus && this.dot:\n              checker = (ans) => Number.isFinite(ans) && !Number.isNaN(ans) && ans >= 0;\n              break;\n            case this.minus && !this.dot:\n              checker = (ans) => Number.isFinite(ans) && !Number.isNaN(ans) && ans % 1 === 0;\n              break;\n            default:\n              checker = (ans) => Number.isFinite(ans) && !Number.isNaN(ans);\n          }\n          while (!checker(ans)) {\n            exp = this._genExpression();\n            this.bracket && (exp = this._insertBracket(exp)); // insert bracket\n            ans = evaluate(exp);\n          }\n          // if dot, floor to same dot range\n          if (this.dot) {\n            ans = ans.toFixed(this.dotRange);\n          } else {\n            ans = ans.toString();\n          }\n          // add exp\n          exps.push({ exp, ans });\n        }\n        resolve(exps);\n      } catch (e) {\n        reject(e);\n      }\n    });\n  }\n}\n\nexport default ExpGen;\n","/**\n * @private\n * get random number\n * @param {number} min\n * @param {number} max\n */\nfunction _getRandomNumber(min, max) {\n  const range = max - min;\n  const rand = Math.random(); // 0.0-1.0\n  return min + Math.round(rand * range);\n}\n\n/**\n * generate fill in blank questions\n * @param {array} rawExps\n */\nfunction _genFillBlank(rawExps) {\n  const questions = rawExps.map((val, index) => ({\n    index,\n    exp: val.exp,\n    ans: val.ans,\n    userAns: '',\n    status: null,\n  }));\n  return questions;\n}\n\n/**\n * generate judge questions\n * @param {array} rawExps\n * @param {number} dotRange\n */\nfunction _genJudge(rawExps, dotRange) {\n  const questions = rawExps.map((val, index) => {\n    const newVal = { index, userAns: null, status: null };\n    const rand = _getRandomNumber(0, 1);\n    if (rand === 1) {\n      newVal.exp = `${val.exp} = ${val.ans}`;\n      newVal.ans = true;\n    } else {\n      newVal.exp = `${val.exp} = ${(Number(val.ans) + _getRandomNumber(1, 50)).toFixed(dotRange)}`;\n      newVal.ans = false;\n    }\n    return newVal;\n  });\n  return questions;\n}\n\n/**\n * generate select questions\n * @param {array} rawExps\n * @param {number} dotRange\n */\nfunction _genSelect(rawExps, dotRange) {\n  const questions = rawExps.map((val, index) => {\n    const newVal = { index, exp: val.exp, userAns: null, status: null };\n    const rand = _getRandomNumber(0, 2);\n    const selections = [\n      (Number(val.ans) + _getRandomNumber(1, 50)).toFixed(dotRange),\n      (Number(val.ans) + _getRandomNumber(1, 50)).toFixed(dotRange),\n      (Number(val.ans) + _getRandomNumber(1, 50)).toFixed(dotRange),\n    ];\n    selections[rand] = val.ans;\n    newVal.selections = selections;\n    newVal.ans = rand;\n    return newVal;\n  });\n  return questions;\n}\n\n/**\n * generate questions\n * @param {array} rawExps\n * @param {number} fillBlank\n * @param {number} judge\n * @param {number} select\n * @param {object} settings\n */\nfunction genQuestions(rawExps, fillBlank, judge, select, settings) {\n  let fillBlankExps = [];\n  for (let i = 0; i < fillBlank; i++) {\n    fillBlankExps.push(rawExps.shift());\n  }\n  fillBlankExps = _genFillBlank(fillBlankExps);\n  let judgeExps = [];\n  for (let i = fillBlank; i < fillBlank + judge; i++) {\n    judgeExps.push(rawExps.shift());\n  }\n  judgeExps = _genJudge(judgeExps, settings.dot ? settings.dotRange : 0);\n  let selectExps = [];\n  for (let i = fillBlank + judge; i < fillBlank + judge + select; i++) {\n    selectExps.push(rawExps.shift());\n  }\n  selectExps = _genSelect(selectExps, settings.dot ? settings.dotRange : 0);\n  return {\n    fillBlankQuestions: fillBlankExps,\n    judgeQuestions: judgeExps,\n    selectQuestions: selectExps,\n  };\n}\n\nexport default genQuestions;\n","// update all questions\nexport const UPDATE_ALL_QUESTIONS = 'UPDATE_ALL_QUESTIONS';\nexport const actionAllQuestions = (value) => {\n  return {\n    type: UPDATE_ALL_QUESTIONS,\n    value,\n  };\n};\n\n// update fill blank questions\nexport const UPDATE_FILL_BLANK_QUESTIONS = 'UPDATE_FILL_BLANK_QUESTIONS';\nexport const actionFillBlankQuestions = (value) => {\n  return {\n    type: UPDATE_FILL_BLANK_QUESTIONS,\n    value,\n  };\n};\n\n// update judge questions\nexport const UPDATE_JUDGE_QUESTIONS = 'UPDATE_JUDGE_QUESTIONS';\nexport const actionJudgeQuestions = (value) => {\n  return {\n    type: UPDATE_JUDGE_QUESTIONS,\n    value,\n  };\n};\n\n// update select questions\nexport const UPDATE_SELECT_QUESTIONS = 'UPDATE_SELECT_QUESTIONS';\nexport const actionSelectQuestions = (value) => {\n  return {\n    type: UPDATE_SELECT_QUESTIONS,\n    value,\n  };\n};\n","import React, { useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\n// antd\nimport { Table, Input, Radio } from 'antd';\n// css\nimport './index.scss';\n// exp gens\nimport ExpGen from '../../plugins/ExpGen';\nimport genQuestions from '../../plugins/genQuestions';\n// store\nimport {\n  actionAllQuestions,\n  actionFillBlankQuestions,\n  actionJudgeQuestions,\n  actionSelectQuestions,\n} from './store/actions';\n\n// exp generator\nconst expGen = new ExpGen();\n\nfunction Test() {\n  const dispatch = useDispatch();\n  // get settings data\n  const { fillBlank, judge, select } = useSelector((state) =>\n    state.getIn(['start', 'questionTypes']).toJS()\n  );\n  const questionSettings = useSelector((state) =>\n    state.getIn(['start', 'questionSettings']).toJS()\n  );\n  // get questions\n  const { fillBlankQuestions, judgeQuestions, selectQuestions } = useSelector((state) => {\n    return state.get('test').toJS();\n  });\n\n  const questionsAreEmpty = !(\n    fillBlankQuestions.length > 0 ||\n    judgeQuestions.length > 0 ||\n    selectQuestions.length > 0\n  );\n\n  // update questions when data changed\n  // and if currentQuestions been reset to {}\n  // it will run again to gen new questions\n  useEffect(() => {\n    // if question arrays are empty\n    if (questionsAreEmpty) {\n      (async () => {\n        const rawExps = await expGen.getExpressions(fillBlank + judge + select, questionSettings);\n        const questions = genQuestions(rawExps, fillBlank, judge, select, questionSettings);\n        dispatch(actionAllQuestions(questions));\n      })();\n    }\n  }, [dispatch, fillBlank, judge, questionSettings, questionsAreEmpty, select]);\n\n  return (\n    <div className=\"test\">\n      {/* <button\n        onClick={() =>\n          dispatch(\n            actionAllQuestions({ fillBlankQuestions: [], judgeQuestions: [], selectQuestions: [] })\n          )\n        }\n      >\n        测试\n      </button> */}\n      <div className=\"test-section\">\n        <Table\n          dataSource={fillBlankQuestions}\n          rowKey={(record) => record.index}\n          pagination={false}\n          size=\"middle\"\n          tableLayout=\"fixed\"\n        >\n          <Table.Column title=\"题目\" dataIndex=\"exp\" key=\"exp\" align=\"right\" />\n          <Table.Column\n            title=\"填空\"\n            key=\"userAns\"\n            render={(record) => (\n              <Input\n                value={record.userAns}\n                onChange={(e) => {\n                  const value = e.target.value;\n                  dispatch(actionFillBlankQuestions({ index: record.index, answer: value }));\n                }}\n              />\n            )}\n          />\n        </Table>\n      </div>\n      <div className=\"test-section\">\n        <Table\n          dataSource={judgeQuestions}\n          rowKey={(record) => record.index}\n          pagination={false}\n          size=\"middle\"\n          tableLayout=\"fixed\"\n        >\n          <Table.Column title=\"题目\" dataIndex=\"exp\" key=\"exp\" align=\"right\" />\n          <Table.Column\n            title=\"判断\"\n            key=\"userAns\"\n            render={(record) => (\n              <Radio.Group\n                optionType=\"button\"\n                options={[\n                  { label: '正确', value: true },\n                  { label: '错误', value: false },\n                ]}\n                value={record.userAns}\n                onChange={(e) => {\n                  const value = e.target.value;\n                  dispatch(actionJudgeQuestions({ index: record.index, answer: value }));\n                }}\n              />\n            )}\n          />\n        </Table>\n      </div>\n      <div className=\"test-section\">\n        <Table\n          dataSource={selectQuestions}\n          rowKey={(record) => record.index}\n          pagination={false}\n          size=\"middle\"\n          tableLayout=\"fixed\"\n        >\n          <Table.Column title=\"题目\" dataIndex=\"exp\" key=\"exp\" align=\"right\" />\n          <Table.Column\n            title=\"选择\"\n            key=\"userAns\"\n            render={(record) => (\n              <Radio.Group\n                options={[\n                  { label: record.selections[0], value: 0 },\n                  { label: record.selections[1], value: 1 },\n                  { label: record.selections[2], value: 2 },\n                ]}\n                value={record.userAns}\n                onChange={(e) => {\n                  const value = e.target.value;\n                  dispatch(actionSelectQuestions({ index: record.index, answer: value }));\n                }}\n              />\n            )}\n          />\n        </Table>\n      </div>\n    </div>\n  );\n}\n\nexport default Test;\n","// deps\nimport React from 'react';\nimport { Switch, Route, Link, useRouteMatch, withRouter, Redirect } from 'react-router-dom';\nimport { Menu } from 'antd';\nimport {\n  SettingOutlined,\n  FormOutlined,\n  HistoryOutlined,\n  InfoCircleOutlined,\n} from '@ant-design/icons';\n// views\nimport Footer from './components/Footer';\nimport Start from './views/Start';\nimport Test from './views/Test';\n\n/**\n * app main page\n */\nconst App = withRouter(({ history }) => {\n  // router match\n  const match = useRouteMatch();\n  // menu items\n  const menuItems = [\n    {\n      key: 'start',\n      icon: <SettingOutlined />,\n      text: '开始',\n    },\n    {\n      key: 'test',\n      icon: <FormOutlined />,\n      text: '测试',\n    },\n    {\n      key: 'history',\n      icon: <HistoryOutlined />,\n      text: '历史记录',\n    },\n    {\n      key: 'about',\n      icon: <InfoCircleOutlined />,\n      text: '关于',\n    },\n  ];\n\n  return (\n    <div className=\"app\">\n      <Menu className=\"app-nav\" mode=\"horizontal\" selectedKeys={[history.location.pathname]}>\n        {menuItems.map((val) => (\n          <Menu.Item key={`${match.url}/${val.key}`}>\n            <Link to={`${match.url}/${val.key}`}>\n              {val.icon}\n              <span>{val.text}</span>\n            </Link>\n          </Menu.Item>\n        ))}\n      </Menu>\n      <div className=\"app-content\">\n        <Switch>\n          <Route path={`${match.path}/start`} component={Start} />\n          <Route path={`${match.path}/test`} component={Test}></Route>\n          <Route path={`${match.path}/history`}>历史记录</Route>\n          <Route path={`${match.path}/about`}>关于</Route>\n          <Redirect to=\"/\" />\n        </Switch>\n      </div>\n      <Footer divider={true} />\n    </div>\n  );\n});\n\nexport default App;\n","import { fromJS } from 'immutable';\nimport { UPDATE_QUESTION_TYPES, UPDATE_QUESTION_SETTINGSS } from './actions';\n\n// intergated settings\nconst EASY_SETTINGS = fromJS({\n  hhc: 'easy',\n  range: 10,\n  minus: false,\n  bracket: false,\n  dot: false,\n  dotRange: 1,\n});\nconst HARD_SETTINGS = fromJS({\n  hhc: 'hard',\n  range: 100,\n  minus: true,\n  bracket: true,\n  dot: true,\n  dotRange: 2,\n});\n\nconst defaultState = fromJS({\n  questionTypes: {\n    fillBlank: 2, // fill in blanks\n    judge: 4, // judgements\n    select: 3, // selections\n  },\n  questionSettings: EASY_SETTINGS,\n});\n\nconst reducer = (prevState = defaultState, action) => {\n  switch (action.type) {\n    // update question types\n    case UPDATE_QUESTION_TYPES:\n      return prevState.mergeDeep(fromJS({ questionTypes: action.value }));\n    // update question settings\n    case UPDATE_QUESTION_SETTINGSS:\n      if (action.value.hhc === 'easy') {\n        return prevState.mergeDeep(fromJS({ questionSettings: EASY_SETTINGS }));\n      } else if (action.value.hhc === 'hard') {\n        return prevState.mergeDeep(fromJS({ questionSettings: HARD_SETTINGS }));\n      }\n      return prevState.mergeDeep(fromJS({ questionSettings: action.value }));\n    // init\n    default:\n      return prevState;\n  }\n};\n\nexport default reducer;\n","import { fromJS } from 'immutable';\n\nimport {\n  UPDATE_ALL_QUESTIONS,\n  UPDATE_FILL_BLANK_QUESTIONS,\n  UPDATE_JUDGE_QUESTIONS,\n  UPDATE_SELECT_QUESTIONS,\n} from './actions';\n\nconst defaultState = fromJS({\n  fillBlankQuestions: [],\n  judgeQuestions: [],\n  selectQuestions: [],\n});\n\nconst reducer = (prevState = defaultState, action) => {\n  switch (action.type) {\n    // update all questions\n    case UPDATE_ALL_QUESTIONS:\n      return defaultState.mergeDeep(fromJS(action.value));\n    // update fill blank questions { index, answer }\n    case UPDATE_FILL_BLANK_QUESTIONS: {\n      const { index, answer } = action.value;\n      const oldList = prevState.get('fillBlankQuestions');\n      const newList = oldList.set(index, oldList.get(index).set('userAns', answer));\n      return prevState.set('fillBlankQuestions', newList);\n    }\n    // update judge questions { index, answer }\n    case UPDATE_JUDGE_QUESTIONS: {\n      const { index, answer } = action.value;\n      const oldList = prevState.get('judgeQuestions');\n      const newList = oldList.set(index, oldList.get(index).set('userAns', answer));\n      return prevState.set('judgeQuestions', newList);\n    }\n    // update select questions { index, answer }\n    case UPDATE_SELECT_QUESTIONS: {\n      const { index, answer } = action.value;\n      const oldList = prevState.get('selectQuestions');\n      const newList = oldList.set(index, oldList.get(index).set('userAns', answer));\n      return prevState.set('selectQuestions', newList);\n    }\n    // init\n    default:\n      return prevState;\n  }\n};\n\nexport default reducer;\n","import { combineReducers } from 'redux-immutable';\n// reducers\nimport { reducer as start } from '../views/Start/store';\nimport { reducer as test } from '../views/Test/store';\n\n// combine reducers\nexport default combineReducers({\n  start,\n  test,\n});\n","import { createStore } from 'redux';\n// preloaded state\nimport reducer from './reducer';\n// apply devtools\nconst enhancer = window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__();\n// create store\nconst store = createStore(reducer, enhancer);\n\nexport default store;\n","// deps\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { HashRouter as Router, Switch, Route } from 'react-router-dom';\nimport { Provider } from 'react-redux';\n// css\nimport 'normalize.css';\nimport './index.scss';\n// antd config provider\nimport { ConfigProvider } from 'antd';\nimport zh_CN from 'antd/es/locale/zh_CN';\n// views\nimport Home from './views/Home';\nimport App from './App';\n// store\nimport store from './store';\n\nReactDOM.render(\n  <Provider store={store}>\n    <ConfigProvider autoInsertSpaceInButton={false} locale={zh_CN}>\n      <Router>\n        <Switch>\n          <Route path=\"/app\" component={App} />\n          <Route path=\"/\" component={Home} />\n        </Switch>\n      </Router>\n    </ConfigProvider>\n  </Provider>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}